// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).
//
// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

import ballerina/constraint;
import ballerina/http;

# The order request details.
public type order_request record {
    # The intent to either capture payment immediately or authorize a payment for an order after order creation.
    checkout_payment_intent intent;
    # The customer who approves and pays for the order. The customer is also known as the payer.
    payer payer?;
    # An array of purchase units. Each purchase unit establishes a contract between a payer and the payee. Each purchase unit represents either a full or partial order that the payer intends to purchase from the payee.
    @constraint:Array {maxLength: 10, minLength: 1}
    purchase_unit_request[] purchase_units;
    # The payment source definition.
    payment_source payment_source?;
    # Customizes the payer experience during the approval process for the payment with PayPal.<blockquote><strong>Note:</strong> Partners and Marketplaces might configure <code>brand_name</code> and <code>shipping_preference</code> during partner account setup, which overrides the request values.</blockquote>
    order_application_context application_context?;
};

public type PaypalWalletVaultResponseAllOf2 record {
    # The details about a customer in PayPal's system of record.
    paypal_wallet_customer wallet_customer?;
    vault_owner_id owner_id?;
};

# The payment card to use to fund a payment. Card can be a credit or debit card.
public type card_response record {
    # The card holder's name as it appears on the card.
    @constraint:String {maxLength: 300, minLength: 2}
    string name?;
    # The last digits of the payment card.
    @constraint:String {pattern: re `[0-9]{2,}`}
    string last_digits?;
    # The card network or brand. Applies to credit, debit, gift, and payment cards.
    card_brand brand?;
    # Array of brands or networks associated with the card.
    @constraint:Array {maxLength: 256, minLength: 1}
    card_brand[] available_networks?;
    # The payment card type.
    "CREDIT"|"DEBIT"|"PREPAID"|"UNKNOWN" 'type?;
    # Results of Authentication such as 3D Secure.
    authentication_response authentication_result?;
    # Additional attributes associated with the use of this card.
    card_attributes_response attributes?;
    # Representation of card details as received in the request.
    card_from_request from_request?;
    # The year and month, in ISO-8601 `YYYY-MM` date format. See [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
    date_year_month expiry?;
    # Bank Identification Number (BIN) details used to fund a payment.
    bin_details bin_details?;
};

# Customizes the payer experience during the approval process for the BLIK payment.
public type blik_experience_context record {
    *experience_context_base;
    *BlikExperienceContextAllOf2;
};

# The JSON patch object to apply partial updates to resources.
public type patch record {
    # The operation.
    "add"|"remove"|"replace"|"move"|"copy"|"test" op;
    # The <a href="https://tools.ietf.org/html/rfc6901">JSON Pointer</a> to the target document location at which to complete the operation.
    string path?;
    # The value to apply. The <code>remove</code>, <code>copy</code>, and <code>move</code> operations do not require a value. Since <a href="https://www.rfc-editor.org/rfc/rfc69021">JSON Patch</a> allows any type for <code>value</code>, the <code>type</code> property is not specified.
    anydata value?;
    # The <a href="https://tools.ietf.org/html/rfc6901">JSON Pointer</a> to the target document location from which to move the value. Required for the <code>move</code> operation.
    string 'from?;
};

# The order status.
public type order_status "CREATED"|"SAVED"|"APPROVED"|"VOIDED"|"COMPLETED"|"PAYER_ACTION_REQUIRED";

# The details about a saved PayPal Wallet payment source.
public type paypal_wallet_vault_response record {
    *vault_response;
    *PaypalWalletVaultResponseAllOf2;
};

# A resource that identifies a PayPal Wallet is used for payment.
public type paypal_wallet record {
    # The PayPal-generated ID for the vaulted payment source. This ID should be stored on the merchant's server so the saved payment source can be used for future transactions.
    vault_id vault_id?;
    # The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>
    email email_address?;
    # The name of the party.
    name\-2 name?;
    # The phone information.
    phone_with_type phone?;
    # The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.
    date_no_time birth_date?;
    # The tax ID of the customer. The customer is also known as the payer. Both `tax_id` and `tax_id_type` are required.
    tax_info tax_info?;
    # The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).
    address_portable\-2 address?;
    # Additional attributes associated with the use of this PayPal Wallet.
    paypal_wallet_attributes attributes?;
    # Customizes the payer experience during the approval process for payment with PayPal.<blockquote><strong>Note:</strong> Partners and Marketplaces might configure <code>brand_name</code> and <code>shipping_preference</code> during partner account setup, which overrides the request values.</blockquote>
    paypal_wallet_experience_context experience_context?;
    # The PayPal billing agreement ID. References an approved recurring payment for goods or services.
    billing_agreement_id billing_agreement_id?;
};

# Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.
@display {label: "Connection Config"}
public type ConnectionConfig record {|
    # Configurations related to client authentication
    OAuth2ClientCredentialsGrantConfig auth;
    # The HTTP version understood by the client
    http:HttpVersion httpVersion = http:HTTP_2_0;
    # Configurations related to HTTP/1.x protocol
    http:ClientHttp1Settings http1Settings = {};
    # Configurations related to HTTP/2 protocol
    http:ClientHttp2Settings http2Settings = {};
    # The maximum time to wait (in seconds) for a response before closing the connection
    decimal timeout = 30;
    # The choice of setting `forwarded`/`x-forwarded` header
    string forwarded = "disable";
    # Configurations associated with Redirection
    http:FollowRedirects followRedirects?;
    # Configurations associated with request pooling
    http:PoolConfiguration poolConfig?;
    # HTTP caching related configurations
    http:CacheConfig cache = {};
    # Specifies the way of handling compression (`accept-encoding`) header
    http:Compression compression = http:COMPRESSION_AUTO;
    # Configurations associated with the behaviour of the Circuit Breaker
    http:CircuitBreakerConfig circuitBreaker?;
    # Configurations associated with retrying
    http:RetryConfig retryConfig?;
    # Configurations associated with cookies
    http:CookieConfig cookieConfig?;
    # Configurations associated with inbound response size limits
    http:ResponseLimitConfigs responseLimits = {};
    # SSL/TLS-related options
    http:ClientSecureSocket secureSocket?;
    # Proxy server related options
    http:ProxyConfig proxy?;
    # Provides settings related to client socket configuration
    http:ClientSocketConfig socketConfig = {};
    # Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default
    boolean validation = true;
    # Enables relaxed data binding on the client side. When enabled, `nil` values are treated as optional, 
    # and absent fields are handled as `nilable` types. Enabled by default.
    boolean laxDataBinding = true;
|};

public type BlikExperienceContextAllOf2 record {
    # An Internet Protocol address (IP address). This address assigns a numerical label to each device that is connected to a computer network through the Internet Protocol. Supports IPv4 and IPv6 addresses.
    ip_address consumer_ip?;
    # The payer's User Agent. For example, Mozilla/5.0 (Macintosh; Intel Mac OS X x.y; rv:42.0).
    @constraint:String {maxLength: 256, minLength: 1, pattern: re `^.*$`}
    string consumer_user_agent?;
};

# The tracking details of an order.
public type order_tracker_request record {
    *shipment_tracker;
    *OrderTrackerRequestAllOf2;
};

# The phone type.
public type phone_type "FAX"|"HOME"|"MOBILE"|"OTHER"|"PAGER";

# The merchant-preferred payment methods.
public type payee_payment_method_preference "UNRESTRICTED"|"IMMEDIATE_PAYMENT_REQUIRED";

# Information used to pay using BLIK one-click flow.
public type blik_one_click_response record {
    # The merchant generated, unique reference serving as a primary identifier for accounts connected between Blik and a merchant.
    @constraint:String {maxLength: 64, minLength: 3, pattern: re `^[ -~]{3,64}$`}
    string consumer_reference?;
};

# Represents the Headers record for the operation: orders.capture
public type OrdersCaptureHeaders record {
    # The server stores keys for 6 hours. The API callers can request the times to up to 72 hours by speaking to their Account Manager.
    string PayPal\-Request\-Id?;
    # An API-caller-provided JSON Web Token (JWT) assertion that identifies the merchant. For details, see <a href="/api/rest/requests/#paypal-auth-assertion">PayPal-Auth-Assertion</a>.
    string PayPal\-Auth\-Assertion?;
    # The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul>
    @constraint:String {maxLength: 25, minLength: 1, pattern: re `^[a-zA-Z=]*$`}
    string Prefer = "return=representation";
    string PayPal\-Client\-Metadata\-Id?;
};

# The order shipping details.
public type shipping_with_tracking_details record {
    *shipping_detail;
    *ShippingWithTrackingDetailsAllOf2;
};

# Information needed to pay using P24 (Przelewy24).
public type p24_request record {
    # The full name representation like Mr J Smith.
    full_name name;
    # The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>
    email_address email;
    # The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
    country_code country_code;
    # Customizes the payer experience during the approval process for the payment.
    experience_context_base experience_context?;
};

# The shipping details.
public type shipping_detail record {
    # The name of the party.
    name name?;
    # A classification for the method of purchase fulfillment (e.g shipping, in-store pickup, etc). Either `type` or `options` may be present, but not both.
    "SHIPPING"|"PICKUP_IN_PERSON"|"PICKUP_IN_STORE"|"PICKUP_FROM_PERSON" 'type?;
    # An array of shipping options that the payee or merchant offers to the payer to ship or pick up their items.
    @constraint:Array {maxLength: 10}
    shipping_option[] options?;
    # The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).
    address_portable address?;
};

# The last characters of the IBAN used to pay.
@constraint:String {maxLength: 34, minLength: 4, pattern: re `[a-zA-Z0-9]{4}`}
public type iban_last_chars string;

# The PayPal billing agreement ID. References an approved recurring payment for goods or services.
@constraint:String {maxLength: 128, minLength: 2, pattern: re `^[a-zA-Z0-9-]+$`}
public type billing_agreement_id string;

# The full name representation like Mr J Smith.
@constraint:String {maxLength: 300, minLength: 3}
public type full_name string;

public type name\-2 record {
    string prefix?;
    string given_name?;
    string surname?;
    string middle_name?;
    string suffix?;
    string full_name?;
};

# Details about the merchant cobranded card used for order purchase.
public type cobranded_card record {
    # Array of labels for the cobranded card.
    @constraint:Array {maxLength: 25, minLength: 1}
    cobranded_cardLabelsItemsString[] labels?;
    # The details for the merchant who receives the funds and fulfills the order. The merchant is also known as the payee.
    payee_base payee?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money amount?;
};

public type TrackerAllOf1 record {
    # The tracker id.
    string id?;
    tracker_status status?;
    # An array of details of items in the shipment.
    tracker_item[] items?;
    # An array of request-related HATEOAS links.
    link_description[] links?;
};

# Information needed to pay using giropay.
public type giropay_request record {
    # The full name representation like Mr J Smith.
    full_name name;
    # The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
    country_code country_code;
    # Customizes the payer experience during the approval process for the payment.
    experience_context_base experience_context?;
};

# Represents the Headers record for the operation: orders.track.create
public type OrdersTrackCreateHeaders record {
    # An API-caller-provided JSON Web Token (JWT) assertion that identifies the merchant. For details, see <a href="/api/rest/requests/#paypal-auth-assertion">PayPal-Auth-Assertion</a>.
    string PayPal\-Auth\-Assertion?;
};

# Basic vault instruction specification that can be extended by specific payment sources that supports vaulting.
public type vault_instruction_base record {
    # Defines how and when the payment source gets vaulted.
    store_in_vault_instruction store_in_vault?;
};

# Additional attributes associated with the use of this card.
public type card_attributes record {
    # The details about a customer in PayPal's system of record.
    customer customer?;
    # Basic vault instruction specification that can be extended by specific payment sources that supports vaulting.
    vault_instruction_base vault?;
};

# The intent to either capture payment immediately or authorize a payment for an order after order creation.
public type checkout_payment_intent "CAPTURE"|"AUTHORIZE";

# The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.
@constraint:String {maxLength: 10, minLength: 10, pattern: re `^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$`}
public type date_no_time string;

# The order authorize response.
public type order_authorize_response record {
    *activity_timestamps;
    *OrderAuthorizeResponseAllOf2;
};

# Liability shift indicator. The outcome of the issuer's authentication.
public type liability_shift "NO"|"POSSIBLE"|"UNKNOWN";

# Additional attributes associated with the use of a Venmo Wallet.
public type venmo_wallet_attributes_response record {
    # The details about a saved payment source.
    vault_response vault?;
};

# The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>
@constraint:String {maxLength: 254, minLength: 3}
public type email string;

# Status of Authentication eligibility.
public type enrolled "Y"|"N"|"U"|"B";

public type altpay_recurring_attributes anydata;

# The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.<br/>For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.
public type AddressDetails record {
    # The street number.
    @constraint:String {maxLength: 100}
    string street_number?;
    # The street name. Just `Drury` in `Drury Lane`.
    @constraint:String {maxLength: 100}
    string street_name?;
    # The street type. For example, avenue, boulevard, road, or expressway.
    @constraint:String {maxLength: 100}
    string street_type?;
    # The delivery service. Post office box, bag number, or post office name.
    @constraint:String {maxLength: 100}
    string delivery_service?;
    # A named locations that represents the premise. Usually a building name or number or collection of buildings with a common name or number. For example, <code>Craven House</code>.
    @constraint:String {maxLength: 100}
    string building_name?;
    # The first-order entity below a named building or location that represents the sub-premises. Usually a single building within a collection of buildings with a common name. Can be a flat, story, floor, room, or apartment.
    @constraint:String {maxLength: 100}
    string sub_building?;
};

# Information needed to pay using Trustly.
public type trustly record {
    # The full name representation like Mr J Smith.
    full_name name?;
    # The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
    country_code country_code?;
    # The business identification code (BIC). In payments systems, a BIC is used to identify a specific business, most commonly a bank.
    bic bic?;
    # The last characters of the IBAN used to pay.
    iban_last_chars iban_last_chars?;
};

# Type of card. i.e Credit, Debit and so on.
public type card_type "CREDIT"|"DEBIT"|"PREPAID"|"STORE"|"UNKNOWN";

public type money\-2 record {
    currency_code\-2 currency_code;
    string value;
};

# The account identifier for a PayPal account.
@constraint:String {maxLength: 13, minLength: 13, pattern: re `^[2-9A-HJ-NP-Z]{13}$`}
public type account_id string;

# The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>
@constraint:String {maxLength: 254, minLength: 3}
public type email_address string;

# The payment source used to fund the payment.
public type payment_source_response record {
    # The payment card to use to fund a payment. Card can be a credit or debit card.
    card_response card?;
    # The PayPal Wallet response.
    paypal_wallet_response paypal?;
    # Information used to pay Bancontact.
    bancontact bancontact?;
    # Information used to pay using BLIK.
    blik blik?;
    # Information used to pay using eps.
    eps eps?;
    # Information needed to pay using giropay.
    giropay giropay?;
    # Information used to pay using iDEAL.
    ideal ideal?;
    # Information used to pay using MyBank.
    mybank mybank?;
    # Information used to pay using P24(Przelewy24).
    p24 p24?;
    # Information used to pay using Sofort.
    sofort sofort?;
    # Information needed to pay using Trustly.
    trustly trustly?;
    # Venmo wallet response.
    venmo_wallet_response venmo?;
};

public type PayeeAllOf2 record {
};

public type VaultVenmoWalletBaseAllOf2 record {
    # The description displayed to Venmo consumer on the approval flow for Venmo, as well as on the Venmo payment token management experience on Venmo.com.
    @constraint:String {maxLength: 128, minLength: 1}
    string description?;
    # Expected business/pricing model for the billing agreement.
    "IMMEDIATE"|"DEFERRED"|"RECURRING_PREPAID"|"RECURRING_POSTPAID"|"THRESHOLD_PREPAID"|"THRESHOLD_POSTPAID" usage_pattern?;
    # The usage type associated with the Venmo payment token.
    "MERCHANT"|"PLATFORM" usage_type?;
    # The customer type associated with the Venmo payment token. This is to indicate whether the customer acting on the merchant / platform is either a business or a consumer.
    "CONSUMER"|"BUSINESS" customer_type = "CONSUMER";
    # Create multiple payment tokens for the same payer, merchant/platform combination. Use this when the customer has not logged in at merchant/platform. The payment token thus generated, can then also be used to create the customer account at merchant/platform. Use this also when multiple payment tokens are required for the same payer, different customer at merchant/platform. This helps to identify customers distinctly even though they may share the same Venmo account.
    boolean permit_multiple_payment_tokens = false;
};

public type PayerAllOf2 record {
    # The name of the party.
    name name?;
    # The phone information.
    phone_with_type phone?;
    # The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.
    date_no_time birth_date?;
    # The tax ID of the customer. The customer is also known as the payer. Both `tax_id` and `tax_id_type` are required.
    tax_info tax_info?;
    # The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).
    address_portable address?;
};

# Information needed to pay using eps.
public type eps_request record {
    # The full name representation like Mr J Smith.
    full_name name;
    # The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
    country_code country_code;
    # Customizes the payer experience during the approval process for the payment.
    experience_context_base experience_context?;
};

# OAuth2 Client Credentials Grant Configs
public type OAuth2ClientCredentialsGrantConfig record {|
    *http:OAuth2ClientCredentialsGrantConfig;
    # Token URL
    string tokenUrl = "https://api-m.sandbox.paypal.com/v2/checkout/v1/oauth2/token";
|};

public type AuthorizationAllOf2 record {
    # The PayPal-generated ID for the authorized payment.
    string id?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money amount?;
    # The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives.
    string invoice_id?;
    # The API caller-provided external ID. Used to reconcile API caller-initiated transactions with PayPal transactions. Appears in transaction and settlement reports.
    @constraint:String {maxLength: 127}
    string custom_id?;
    # Reference values used by the card network to identify a transaction.
    network_transaction_reference network_transaction_reference?;
    # The level of protection offered as defined by [PayPal Seller Protection for Merchants](https://www.paypal.com/us/webapps/mpp/security/seller-protection).
    seller_protection seller_protection?;
    # The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.<blockquote><strong>Note:</strong> The regular expression provides guidance but does not reject all invalid dates.</blockquote>
    date_time expiration_time?;
    # An array of related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
    link_description[] links?;
};

# The [language tag](https://tools.ietf.org/html/bcp47#section-2) for the language in which to localize the error-related strings, such as messages, issues, and suggested actions. The tag is made up of the [ISO 639-2 language code](https://www.loc.gov/standards/iso639-2/php/code_list.php), the optional [ISO-15924 script tag](https://www.unicode.org/iso15924/codelists.html), and the [ISO-3166 alpha-2 country code](/api/rest/reference/country-codes/) or [M49 region code](https://unstats.un.org/unsd/methodology/m49/).
@constraint:String {maxLength: 10, minLength: 2, pattern: re `^[a-z]{2}(?:-[A-Z][a-z]{3})?(?:-(?:[A-Z]{2}|[0-9]{3}))?$`}
public type language string;

# The authorization with additional payment details, such as risk assessment and processor response. These details are populated only for certain payment methods.
public type authorization_with_additional_data record {
    *authorization;
    *AuthorizationWithAdditionalDataAllOf2;
};

# The Third Party Network token used to fund a payment.
public type network_token_request record {
    # Third party network token number.
    @constraint:String {maxLength: 19, minLength: 13, pattern: re `^[0-9]{13,19}$`}
    string number;
    # The year and month, in ISO-8601 `YYYY-MM` date format. See [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
    date_year_month expiry;
    # An Encrypted one-time use value that's sent along with Network Token. This field is not required to be present for recurring transactions.
    @constraint:String {maxLength: 32, minLength: 28, pattern: re `^.*$`}
    string cryptogram?;
    # Electronic Commerce Indicator (ECI). The ECI value is part of the 2 data elements that indicate the transaction was processed electronically. This should be passed on the authorization transaction to the Gateway/Processor.
    eci_flag eci_flag?;
    # A TRID, or a Token Requestor ID, is an identifier used by merchants to request network tokens from card networks. A TRID is a precursor to obtaining a network token for a credit card primary account number (PAN), and will aid in enabling secure card on file (COF) payments and reducing fraud.
    @constraint:String {maxLength: 11, minLength: 1, pattern: re `^[0-9A-Z_]+$`}
    string token_requestor_id?;
};

# The line items for this purchase. If your merchant account has been configured for Level 3 processing this field will be passed to the processor on your behalf.
public type line_item record {
    *item;
    *LineItemAllOf2;
};

public type AmountWithBreakdownAllOf2 record {
    # The breakdown of the amount. Breakdown provides details such as total item amount, total tax amount, shipping, handling, insurance, and discounts, if any.
    amount_breakdown breakdown?;
};

# The collection of payments, or transactions, for a purchase unit in an order. For example, authorized payments, captured payments, and refunds.
public type payment_collection record {
    # An array of authorized payments for a purchase unit. A purchase unit can have zero or more authorized payments.
    authorization_with_additional_data[] authorizations?;
    # An array of captured payments for a purchase unit. A purchase unit can have zero or more captured payments.
    capture[] captures?;
    # An array of refunds for a purchase unit. A purchase unit can have zero or more refunds.
    refund[] refunds?;
};

# The phone information.
public type phone_with_type record {
    # The phone type.
    phone_type phone_type?;
    # The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).
    phone phone_number;
};

# The PayPal-generated ID for the vaulted payment source. This ID should be stored on the merchant's server so the saved payment source can be used for future transactions.
@constraint:String {maxLength: 255, minLength: 1, pattern: re `^[0-9a-zA-Z_-]+$`}
public type vault_id string;

public type AuthorizationWithAdditionalDataAllOf2 record {
    # The processor response information for payment requests, such as direct credit card transactions.
    processor_response processor_response?;
};

# The carrier for the shipment. Some carriers have a global version as well as local subsidiaries. The subsidiaries are repeated over many countries and might also have an entry in the global list. Choose the carrier for your country. If the carrier is not available for your country, choose the global version of the carrier. If your carrier name is not in the list, set `carrier` to `OTHER` and set carrier name in `carrier_name_other`. For allowed values, see <a href="/docs/tracking/reference/carriers/">Carriers</a>.
public type shipment_carrier "DPD_RU"|"BG_BULGARIAN_POST"|"KR_KOREA_POST"|"ZA_COURIERIT"|"FR_EXAPAQ"|"ARE_EMIRATES_POST"|"GAC"|"GEIS"|"SF_EX"|"PAGO"|"MYHERMES"|"DIAMOND_EUROGISTICS"|"CORPORATECOURIERS_WEBHOOK"|"BOND"|"OMNIPARCEL"|"SK_POSTA"|"PUROLATOR"|"FETCHR_WEBHOOK"|"THEDELIVERYGROUP"|"CELLO_SQUARE"|"TARRIVE"|"COLLIVERY"|"MAINFREIGHT"|"IND_FIRSTFLIGHT"|"ACSWORLDWIDE"|"AMSTAN"|"OKAYPARCEL"|"ENVIALIA_REFERENCE"|"SEUR_ES"|"CONTINENTAL"|"FDSEXPRESS"|"AMAZON_FBA_SWISHIP"|"WYNGS"|"DHL_ACTIVE_TRACING"|"ZYLLEM"|"RUSTON"|"XPOST"|"CORREOS_ES"|"DHL_FR"|"PAN_ASIA"|"BRT_IT"|"SRE_KOREA"|"SPEEDEE"|"TNT_UK"|"VENIPAK"|"SHREENANDANCOURIER"|"CROSHOT"|"NIPOST_NG"|"EPST_GLBL"|"NEWGISTICS"|"POST_SLOVENIA"|"JERSEY_POST"|"BOMBINOEXP"|"WMG"|"XQ_EXPRESS"|"FURDECO"|"LHT_EXPRESS"|"SOUTH_AFRICAN_POST_OFFICE"|"SPOTON"|"DIMERCO"|"CYPRUS_POST_CYP"|"ABCUSTOM"|"IND_DELIVREE"|"CN_BESTEXPRESS"|"DX_SFTP"|"PICKUPP_MYS"|"FMX"|"HELLMANN"|"SHIP_IT_ASIA"|"KERRY_ECOMMERCE"|"FRETERAPIDO"|"PITNEY_BOWES"|"XPRESSEN_DK"|"SEUR_SP_API"|"DELIVERYONTIME"|"JINSUNG"|"TRANS_KARGO"|"SWISHIP_DE"|"IVOY_WEBHOOK"|"AIRMEE_WEBHOOK"|"DHL_BENELUX"|"FIRSTMILE"|"FASTWAY_IR"|"HH_EXP"|"MYS_MYPOST_ONLINE"|"TNT_NL"|"TIPSA"|"TAQBIN_MY"|"KGMHUB"|"INTEXPRESS"|"OVERSE_EXP"|"ONECLICK"|"ROADRUNNER_FREIGHT"|"GLS_CROTIA"|"MRW_FTP"|"BLUEX"|"DYLT"|"DPD_IR"|"SIN_GLBL"|"TUFFNELLS_REFERENCE"|"CJPACKET"|"MILKMAN"|"ASIGNA"|"ONEWORLDEXPRESS"|"ROYAL_MAIL"|"VIA_EXPRESS"|"TIGFREIGHT"|"ZTO_EXPRESS"|"TWO_GO"|"IML"|"INTEL_VALLEY"|"EFS"|"UK_UK_MAIL"|"RAM"|"ALLIEDEXPRESS"|"APC_OVERNIGHT"|"SHIPPIT"|"TFM"|"M_XPRESS"|"HDB_BOX"|"CLEVY_LINKS"|"IBEONE"|"FIEGE_NL"|"KWE_GLOBAL"|"CTC_EXPRESS"|"LAO_POST"|"AMAZON"|"MORE_LINK"|"JX"|"EASY_MAIL"|"ADUIEPYLE"|"GB_PANTHER"|"EXPRESSSALE"|"SG_DETRACK"|"TRUNKRS_WEBHOOK"|"MATDESPATCH"|"DICOM"|"MBW"|"KHM_CAMBODIA_POST"|"SINOTRANS"|"BRT_IT_PARCELID"|"DHL_SUPPLY_CHAIN"|"DHL_PL"|"TOPYOU"|"PALEXPRESS"|"DHL_SG"|"CN_WEDO"|"FULFILLME"|"DPD_DELISTRACK"|"UPS_REFERENCE"|"CARIBOU"|"LOCUS_WEBHOOK"|"DSV"|"CN_GOFLY"|"P2P_TRC"|"DIRECTPARCELS"|"NOVA_POSHTA_INT"|"FEDEX_POLAND"|"CN_JCEX"|"FAR_INTERNATIONAL"|"IDEXPRESS"|"GANGBAO"|"NEWAY"|"POSTNL_INT_3_S"|"RPX_ID"|"DESIGNERTRANSPORT_WEBHOOK"|"GLS_SLOVEN"|"PARCELLED_IN"|"GSI_EXPRESS"|"CON_WAY"|"BROUWER_TRANSPORT"|"CPEX"|"ISRAEL_POST"|"DTDC_IN"|"PTT_POST"|"XDE_WEBHOOK"|"TOLOS"|"GIAO_HANG"|"GEODIS_ESPACE"|"MAGYAR_HU"|"DOORDASH_WEBHOOK"|"TIKI_ID"|"CJ_HK_INTERNATIONAL"|"STAR_TRACK_EXPRESS"|"HELTHJEM"|"SFB2C"|"FREIGHTQUOTE"|"LANDMARK_GLOBAL_REFERENCE"|"PARCEL2GO"|"DELNEXT"|"RCL"|"CGS_EXPRESS"|"HK_POST"|"SAP_EXPRESS"|"PARCELPOST_SG"|"HERMES"|"IND_SAFEEXPRESS"|"TOPHATTEREXPRESS"|"MGLOBAL"|"AVERITT"|"LEADER"|"_2EBOX"|"SG_SPEEDPOST"|"DBSCHENKER_SE"|"ISR_POST_DOMESTIC"|"BESTWAYPARCEL"|"ASENDIA_DE"|"NIGHTLINE_UK"|"TAQBIN_SG"|"TCK_EXPRESS"|"ENDEAVOUR_DELIVERY"|"NANJINGWOYUAN"|"HEPPNER_FR"|"EMPS_CN"|"FONSEN"|"PICKRR"|"APC_OVERNIGHT_CONNUM"|"STAR_TRACK_NEXT_FLIGHT"|"DAJIN"|"UPS_FREIGHT"|"POSTA_PLUS"|"CEVA"|"ANSERX"|"JS_EXPRESS"|"PADTF"|"UPS_MAIL_INNOVATIONS"|"EZSHIP"|"SYPOST"|"AMAZON_SHIP_MCF"|"YUSEN"|"BRING"|"SDA_IT"|"GBA"|"NEWEGGEXPRESS"|"SPEEDCOURIERS_GR"|"FORRUN"|"PICKUP"|"ECMS"|"INTELIPOST"|"FLASHEXPRESS"|"CN_STO"|"SEKO_SFTP"|"HOME_DELIVERY_SOLUTIONS"|"DPD_HGRY"|"KERRYTTC_VN"|"JOYING_BOX"|"TOTAL_EXPRESS"|"ZJS_EXPRESS"|"STARKEN"|"DEMANDSHIP"|"CN_DPEX"|"AUPOST_CN"|"LOGISTERS"|"GOGLOBALPOST"|"GLS_CZ"|"PAACK_WEBHOOK"|"GRAB_WEBHOOK"|"PARCELPOINT"|"ICUMULUS"|"DAIGLOBALTRACK"|"GLOBAL_IPARCEL"|"YURTICI_KARGO"|"CN_PAYPAL_PACKAGE"|"PARCEL_2_POST"|"GLS_IT"|"PIL_LOGISTICS"|"HEPPNER"|"GENERAL_OVERNIGHT"|"HAPPY2POINT"|"CHITCHATS"|"SMOOTH"|"CLE_LOGISTICS"|"FIEGE"|"MX_CARGO"|"ZIINGFINALMILE"|"DAYTON_FREIGHT"|"TCS"|"AEX"|"HERMES_DE"|"ROUTIFIC_WEBHOOK"|"GLOBAVEND"|"CJ_LOGISTICS"|"PALLET_NETWORK"|"RAF_PH"|"UK_XDP"|"PAPER_EXPRESS"|"LA_POSTE_SUIVI"|"PAQUETEXPRESS"|"LIEFERY"|"STRECK_TRANSPORT"|"PONY_EXPRESS"|"ALWAYS_EXPRESS"|"GBS_BROKER"|"CITYLINK_MY"|"ALLJOY"|"YODEL"|"YODEL_DIR"|"STONE3PL"|"PARCELPAL_WEBHOOK"|"DHL_ECOMERCE_ASA"|"SIMPLYPOST"|"KY_EXPRESS"|"SHENZHEN"|"US_LASERSHIP"|"UC_EXPRE"|"DIDADI"|"CJ_KR"|"DBSCHENKER_B2B"|"MXE"|"CAE_DELIVERS"|"PFCEXPRESS"|"WHISTL"|"WEPOST"|"DHL_PARCEL_ES"|"DDEXPRESS"|"ARAMEX_AU"|"BNEED"|"HK_TGX"|"LATVIJAS_PASTS"|"VIAEUROPE"|"CORREO_UY"|"CHRONOPOST_FR"|"J_NET"|"_6LS"|"BLR_BELPOST"|"BIRDSYSTEM"|"DOBROPOST"|"WAHANA_ID"|"WEASHIP"|"SONICTL"|"KWT"|"AFLLOG_FTP"|"SKYNET_WORLDWIDE"|"NOVA_POSHTA"|"SEINO"|"SZENDEX"|"BPOST_INT"|"DBSCHENKER_SV"|"AO_DEUTSCHLAND"|"EU_FLEET_SOLUTIONS"|"PCFCORP"|"LINKBRIDGE"|"PRIMAMULTICIPTA"|"COUREX"|"ZAJIL_EXPRESS"|"COLLECTCO"|"JTEXPRESS"|"FEDEX_UK"|"USHIP"|"PIXSELL"|"SHIPTOR"|"CDEK"|"VNM_VIETTELPOST"|"CJ_CENTURY"|"GSO"|"VIWO"|"SKYBOX"|"KERRYTJ"|"NTLOGISTICS_VN"|"SDH_SCM"|"ZINC"|"DPE_SOUTH_AFRC"|"CESKA_CZ"|"ACS_GR"|"DEALERSEND"|"JOCOM"|"CSE"|"TFORCE_FINALMILE"|"SHIP_GATE"|"SHIPTER"|"NATIONAL_SAMEDAY"|"YUNEXPRESS"|"CAINIAO"|"DMS_MATRIX"|"DIRECTLOG"|"ASENDIA_US"|"_3JMSLOGISTICS"|"LICCARDI_EXPRESS"|"SKY_POSTAL"|"CNWANGTONG"|"POSTNORD_LOGISTICS_DK"|"LOGISTIKA"|"CELERITAS"|"PRESSIODE"|"SHREE_MARUTI"|"LOGISTICSWORLDWIDE_HK"|"EFEX"|"LOTTE"|"LONESTAR"|"APRISAEXPRESS"|"BEL_RS"|"OSM_WORLDWIDE"|"WESTGATE_GL"|"FASTRACK"|"DTD_EXPR"|"ALFATREX"|"PROMEDDELIVERY"|"THABIT_LOGISTICS"|"HCT_LOGISTICS"|"CARRY_FLAP"|"US_OLD_DOMINION"|"ANICAM_BOX"|"WANBEXPRESS"|"AN_POST"|"DPD_LOCAL"|"STALLIONEXPRESS"|"RAIDEREX"|"SHOPFANS"|"KYUNGDONG_PARCEL"|"CHAMPION_LOGISTICS"|"PICKUPP_SGP"|"MORNING_EXPRESS"|"NACEX"|"THENILE_WEBHOOK"|"HOLISOL"|"LBCEXPRESS_FTP"|"KURASI"|"USF_REDDAWAY"|"APG"|"CN_BOXC"|"ECOSCOOTING"|"MAINWAY"|"PAPERFLY"|"HOUNDEXPRESS"|"BOX_BERRY"|"EP_BOX"|"PLUS_LOG_UK"|"FULFILLA"|"ASE"|"MAIL_PLUS"|"XPO_LOGISTICS"|"WNDIRECT"|"CLOUDWISH_ASIA"|"ZELERIS"|"GIO_EXPRESS"|"OCS_WORLDWIDE"|"ARK_LOGISTICS"|"AQUILINE"|"PILOT_FREIGHT"|"QWINTRY"|"DANSKE_FRAGT"|"CARRIERS"|"AIR_CANADA_GLOBAL"|"PRESIDENT_TRANS"|"STEPFORWARDFS"|"SKYNET_UK"|"PITTOHIO"|"CORREOS_EXPRESS"|"RL_US"|"MARA_XPRESS"|"DESTINY"|"UK_YODEL"|"COMET_TECH"|"DHL_PARCEL_RU"|"TNT_REFR"|"SHREE_ANJANI_COURIER"|"MIKROPAKKET_BE"|"ETS_EXPRESS"|"COLIS_PRIVE"|"CN_YUNDA"|"AAA_COOPER"|"ROCKET_PARCEL"|"_360LION"|"PANDU"|"PROFESSIONAL_COURIERS"|"FLYTEXPRESS"|"LOGISTICSWORLDWIDE_MY"|"CORREOS_DE_ESPANA"|"IMX"|"FOUR_PX_EXPRESS"|"XPRESSBEES"|"PICKUPP_VNM"|"STARTRACK_EXPRESS"|"FR_COLISSIMO"|"NACEX_SPAIN_REFERENCE"|"DHL_SUPPLY_CHAIN_AU"|"ESHIPPING"|"SHREETIRUPATI"|"HX_EXPRESS"|"INDOPAKET"|"CN_17POST"|"K1_EXPRESS"|"CJ_GLS"|"MYS_GDEX"|"NATIONEX"|"ANJUN"|"FARGOOD"|"SMG_EXPRESS"|"RZYEXPRESS"|"SEFL"|"TNT_CLICK_IT"|"HDB"|"HIPSHIPPER"|"RPXLOGISTICS"|"KUEHNE"|"IT_NEXIVE"|"PTS"|"SWISS_POST_FTP"|"FASTRK_SERV"|"_4_72"|"US_YRC"|"POSTNL_INTL_3S"|"ELIAN_POST"|"CUBYN"|"SAU_SAUDI_POST"|"ABXEXPRESS_MY"|"HUAHAN_EXPRESS"|"IND_JAYONEXPRESS"|"ZES_EXPRESS"|"ZEPTO_EXPRESS"|"SKYNET_ZA"|"ZEEK_2_DOOR"|"BLINKLASTMILE"|"POSTA_UKR"|"CHROBINSON"|"CN_POST56"|"COURANT_PLUS"|"SCUDEX_EXPRESS"|"SHIPENTEGRA"|"B_TWO_C_EUROPE"|"COPE"|"IND_GATI"|"CN_WISHPOST"|"NACEX_ES"|"TAQBIN_HK"|"GLOBALTRANZ"|"HKD"|"BJSHOMEDELIVERY"|"OMNIVA"|"SUTTON"|"PANTHER_REFERENCE"|"SFCSERVICE"|"LTL"|"PARKNPARCEL"|"SPRING_GDS"|"ECEXPRESS"|"INTERPARCEL_AU"|"AGILITY"|"XL_EXPRESS"|"ADERONLINE"|"DIRECTCOURIERS"|"PLANZER"|"SENDING"|"NINJAVAN_WB"|"NATIONWIDE_MY"|"SENDIT"|"GB_ARROW"|"IND_GOJAVAS"|"KPOST"|"DHL_FREIGHT"|"BLUECARE"|"JINDOUYUN"|"TRACKON"|"GB_TUFFNELLS"|"TRUMPCARD"|"ETOTAL"|"SFPLUS_WEBHOOK"|"SEKOLOGISTICS"|"HERMES_2MANN_HANDLING"|"DPD_LOCAL_REF"|"UDS"|"ZA_SPECIALISED_FREIGHT"|"THA_KERRY"|"PRT_INT_SEUR"|"BRA_CORREIOS"|"NZ_NZ_POST"|"CN_EQUICK"|"MYS_EMS"|"GB_NORSK"|"ESP_MRW"|"ESP_PACKLINK"|"KANGAROO_MY"|"RPX"|"XDP_UK_REFERENCE"|"NINJAVAN_MY"|"ADICIONAL"|"NINJAVAN_ID"|"ROADBULL"|"YAKIT"|"MAILAMERICAS"|"MIKROPAKKET"|"DYNALOGIC"|"DHL_ES"|"DHL_PARCEL_NL"|"DHL_GLOBAL_MAIL_ASIA"|"DAWN_WING"|"GENIKI_GR"|"HERMESWORLD_UK"|"ALPHAFAST"|"BUYLOGIC"|"EKART"|"MEX_SENDA"|"SFC_LOGISTICS"|"POST_SERBIA"|"IND_DELHIVERY"|"DE_DPD_DELISTRACK"|"RPD2MAN"|"CN_SF_EXPRESS"|"YANWEN"|"MYS_SKYNET"|"CORREOS_DE_MEXICO"|"CBL_LOGISTICA"|"MEX_ESTAFETA"|"AU_AUSTRIAN_POST"|"RINCOS"|"NLD_DHL"|"RUSSIAN_POST"|"COURIERS_PLEASE"|"POSTNORD_LOGISTICS"|"FEDEX"|"DPE_EXPRESS"|"DPD"|"ADSONE"|"IDN_JNE"|"THECOURIERGUY"|"CNEXPS"|"PRT_CHRONOPOST"|"LANDMARK_GLOBAL"|"IT_DHL_ECOMMERCE"|"ESP_NACEX"|"PRT_CTT"|"BE_KIALA"|"ASENDIA_UK"|"GLOBAL_TNT"|"POSTUR_IS"|"EPARCEL_KR"|"INPOST_PACZKOMATY"|"IT_POSTE_ITALIA"|"BE_BPOST"|"PL_POCZTA_POLSKA"|"MYS_MYS_POST"|"SG_SG_POST"|"THA_THAILAND_POST"|"LEXSHIP"|"FASTWAY_NZ"|"DHL_AU"|"COSTMETICSNOW"|"PFLOGISTICS"|"LOOMIS_EXPRESS"|"GLS_ITALY"|"LINE"|"GEL_EXPRESS"|"HUODULL"|"NINJAVAN_SG"|"JANIO"|"AO_COURIER"|"BRT_IT_SENDER_REF"|"SAILPOST"|"LALAMOVE"|"NEWZEALAND_COURIERS"|"ETOMARS"|"VIRTRANSPORT"|"WIZMO"|"PALLETWAYS"|"I_DIKA"|"CFL_LOGISTICS"|"GEMWORLDWIDE"|"GLOBAL_EXPRESS"|"LOGISTYX_TRANSGROUP"|"WESTBANK_COURIER"|"ARCO_SPEDIZIONI"|"YDH_EXPRESS"|"PARCELINKLOGISTICS"|"CNDEXPRESS"|"NOX_NIGHT_TIME_EXPRESS"|"AERONET"|"LTIANEXP"|"INTEGRA2_FTP"|"PARCELONE"|"NOX_NACHTEXPRESS"|"CN_CHINA_POST_EMS"|"CHUKOU1"|"GLS_SLOV"|"ORANGE_DS"|"JOOM_LOGIS"|"AUS_STARTRACK"|"DHL"|"GB_APC"|"BONDSCOURIERS"|"JPN_JAPAN_POST"|"USPS"|"WINIT"|"ARG_OCA"|"TW_TAIWAN_POST"|"DMM_NETWORK"|"TNT"|"BH_POSTA"|"SWE_POSTNORD"|"CA_CANADA_POST"|"WISELOADS"|"ASENDIA_HK"|"NLD_GLS"|"MEX_REDPACK"|"JET_SHIP"|"DE_DHL_EXPRESS"|"NINJAVAN_THAI"|"RABEN_GROUP"|"ESP_ASM"|"HRV_HRVATSKA"|"GLOBAL_ESTES"|"LTU_LIETUVOS"|"BEL_DHL"|"AU_AU_POST"|"SPEEDEXCOURIER"|"FR_COLIS"|"ARAMEX"|"DPEX"|"MYS_AIRPAK"|"CUCKOOEXPRESS"|"DPD_POLAND"|"NLD_POSTNL"|"NIM_EXPRESS"|"QUANTIUM"|"SENDLE"|"ESP_REDUR"|"MATKAHUOLTO"|"CPACKET"|"POSTI"|"HUNTER_EXPRESS"|"CHOIR_EXP"|"LEGION_EXPRESS"|"AUSTRIAN_POST_EXPRESS"|"GRUPO"|"POSTA_RO"|"INTERPARCEL_UK"|"GLOBAL_ABF"|"POSTEN_NORGE"|"XPERT_DELIVERY"|"DHL_REFR"|"DHL_HK"|"SKYNET_UAE"|"GOJEK"|"YODEL_INTNL"|"JANCO"|"YTO"|"WISE_EXPRESS"|"JTEXPRESS_VN"|"FEDEX_INTL_MLSERV"|"VAMOX"|"AMS_GRP"|"DHL_JP"|"HRPARCEL"|"GESWL"|"BLUESTAR"|"CDEK_TR"|"DESCARTES"|"DELTEC_UK"|"DTDC_EXPRESS"|"TOURLINE"|"BH_WORLDWIDE"|"OCS"|"YINGNUO_LOGISTICS"|"UPS"|"TOLL"|"PRT_SEUR"|"DTDC_AU"|"THA_DYNAMIC_LOGISTICS"|"UBI_LOGISTICS"|"FEDEX_CROSSBORDER"|"A1POST"|"TAZMANIAN_FREIGHT"|"CJ_INT_MY"|"SAIA_FREIGHT"|"SG_QXPRESS"|"NHANS_SOLUTIONS"|"DPD_FR"|"COORDINADORA"|"ANDREANI"|"DOORA"|"INTERPARCEL_NZ"|"PHL_JAMEXPRESS"|"BEL_BELGIUM_POST"|"US_APC"|"IDN_POS"|"FR_MONDIAL"|"DE_DHL"|"HK_RPX"|"DHL_PIECEID"|"VNPOST_EMS"|"RRDONNELLEY"|"DPD_DE"|"DELCART_IN"|"IMEXGLOBALSOLUTIONS"|"ACOMMERCE"|"EURODIS"|"CANPAR"|"GLS"|"IND_ECOM"|"ESP_ENVIALIA"|"DHL_UK"|"SMSA_EXPRESS"|"TNT_FR"|"DEX_I"|"BUDBEE_WEBHOOK"|"COPA_COURIER"|"VNM_VIETNAM_POST"|"DPD_HK"|"TOLL_NZ"|"ECHO"|"FEDEX_FR"|"BORDEREXPRESS"|"MAILPLUS_JPN"|"TNT_UK_REFR"|"KEC"|"DPD_RO"|"TNT_JP"|"TH_CJ"|"EC_CN"|"FASTWAY_UK"|"FASTWAY_US"|"GLS_DE"|"GLS_ES"|"GLS_FR"|"MONDIAL_BE"|"SGT_IT"|"TNT_CN"|"TNT_DE"|"TNT_ES"|"TNT_PL"|"PARCELFORCE"|"SWISS_POST"|"TOLL_IPEC"|"AIR_21"|"AIRSPEED"|"BERT"|"BLUEDART"|"COLLECTPLUS"|"COURIERPLUS"|"COURIER_POST"|"DHL_GLOBAL_MAIL"|"DPD_UK"|"DELTEC_DE"|"DEUTSCHE_DE"|"DOTZOT"|"ELTA_GR"|"EMS_CN"|"ECARGO"|"ENSENDA"|"FERCAM_IT"|"FASTWAY_ZA"|"FASTWAY_AU"|"FIRST_LOGISITCS"|"GEODIS"|"GLOBEGISTICS"|"GREYHOUND"|"JETSHIP_MY"|"LION_PARCEL"|"AEROFLASH"|"ONTRAC"|"SAGAWA"|"SIODEMKA"|"STARTRACK"|"TNT_AU"|"TNT_IT"|"TRANSMISSION"|"YAMATO"|"DHL_IT"|"DHL_AT"|"LOGISTICSWORLDWIDE_KR"|"GLS_SPAIN"|"AMAZON_UK_API"|"DPD_FR_REFERENCE"|"DHLPARCEL_UK"|"MEGASAVE"|"QUALITYPOST"|"IDS_LOGISTICS"|"JOYINGBOX"|"PANTHER_ORDER_NUMBER"|"WATKINS_SHEPARD"|"FASTTRACK"|"UP_EXPRESS"|"ELOGISTICA"|"ECOURIER"|"CJ_PHILIPPINES"|"SPEEDEX"|"ORANGECONNEX"|"TECOR"|"SAEE"|"GLS_ITALY_FTP"|"DELIVERE"|"YYCOM"|"ADICIONAL_PT"|"DKSH"|"NIPPON_EXPRESS_FTP"|"GOLS"|"FUJEXP"|"QTRACK"|"OMLOGISTICS_API"|"GDPHARM"|"MISUMI_CN"|"AIR_CANADA"|"CITY56_WEBHOOK"|"SAGAWA_API"|"KEDAEX"|"PGEON_API"|"WEWORLDEXPRESS"|"JT_LOGISTICS"|"TRUSK"|"VIAXPRESS"|"DHL_SUPPLYCHAIN_ID"|"ZUELLIGPHARMA_SFTP"|"MEEST"|"TOLL_PRIORITY"|"MOTHERSHIP_API"|"CAPITAL"|"EUROPAKET_API"|"HFD"|"TOURLINE_REFERENCE"|"GIO_ECOURIER"|"CN_LOGISTICS"|"PANDION"|"BPOST_API"|"PASSPORTSHIPPING"|"PAKAJO"|"DACHSER"|"YUSEN_SFTP"|"SHYPLITE"|"XYY"|"MWD"|"FAXECARGO"|"MAZET"|"FIRST_LOGISTICS_API"|"SPRINT_PACK"|"HERMES_DE_FTP"|"CONCISE"|"KERRY_EXPRESS_TW_API"|"EWE"|"FASTDESPATCH"|"ABCUSTOM_SFTP"|"CHAZKI"|"SHIPPIE"|"GEODIS_API"|"NAQEL_EXPRESS"|"PAPA_WEBHOOK"|"FORWARDAIR"|"DIALOGO_LOGISTICA_API"|"LALAMOVE_API"|"TOMYDOOR"|"KRONOS_WEBHOOK"|"JTCARGO"|"T_CAT"|"CONCISE_WEBHOOK"|"TELEPORT_WEBHOOK"|"CUSTOMCO_API"|"SPX_TH"|"BOLLORE_LOGISTICS"|"CLICKLINK_SFTP"|"M3LOGISTICS"|"VNPOST_API"|"AXLEHIRE_FTP"|"SHADOWFAX"|"MYHERMES_UK_API"|"DAIICHI"|"MENSAJEROSURBANOS_API"|"POLARSPEED"|"IDEXPRESS_ID"|"PAYO"|"WHISTL_SFTP"|"INTEX_DE"|"TRANS2U"|"PRODUCTCAREGROUP_SFTP"|"BIGSMART"|"EXPEDITORS_API_REF"|"AITWORLDWIDE_API"|"WORLDCOURIER"|"QUIQUP"|"AGEDISS_SFTP"|"ANDREANI_API"|"CRLEXPRESS"|"SMARTCAT"|"CROSSFLIGHT"|"PROCARRIER"|"DHL_REFERENCE_API"|"SEINO_API"|"WSPEXPRESS"|"KRONOS"|"TOTAL_EXPRESS_API"|"PARCLL"|"XPEDIGO"|"STAR_TRACK_WEBHOOK"|"GPOST"|"UCS"|"DMFGROUP"|"COORDINADORA_API"|"MARKEN"|"NTL"|"REDJEPAKKETJE"|"ALLIED_EXPRESS_FTP"|"MONDIALRELAY_ES"|"NAEKO_FTP"|"MHI"|"SHIPPIFY"|"MALCA_AMIT_API"|"JTEXPRESS_SG_API"|"DACHSER_WEB"|"FLIGHTLG"|"CAGO"|"COM1EXPRESS"|"TONAMI_FTP"|"PACKFLEET"|"PUROLATOR_INTERNATIONAL"|"WINESHIPPING_WEBHOOK"|"DHL_ES_SFTP"|"PCHOME_API"|"CESKAPOSTA_API"|"GORUSH"|"HOMERUNNER"|"AMAZON_ORDER"|"EFWNOW_API"|"CBL_LOGISTICA_API"|"NIMBUSPOST"|"LOGWIN_LOGISTICS"|"NOWLOG_API"|"DPD_NL"|"GODEPENDABLE"|"ESDEX"|"LOGISYSTEMS_SFTP"|"EXPEDITORS"|"SNTGLOBAL_API"|"SHIPX"|"QINTL_API"|"PACKS"|"POSTNL_INTERNATIONAL"|"AMAZON_EMAIL_PUSH"|"DHL_API"|"SPX"|"AXLEHIRE"|"ICSCOURIER"|"DIALOGO_LOGISTICA"|"SHUNBANG_EXPRESS"|"TCS_API"|"SF_EXPRESS_CN"|"PACKETA"|"SIC_TELIWAY"|"MONDIALRELAY_FR"|"INTIME_FTP"|"JD_EXPRESS"|"FASTBOX"|"PATHEON"|"INDIA_POST"|"TIPSA_REF"|"ECOFREIGHT"|"VOX"|"DIRECTFREIGHT_AU_REF"|"BESTTRANSPORT_SFTP"|"AUSTRALIA_POST_API"|"FRAGILEPAK_SFTP"|"FLIPXP"|"VALUE_WEBHOOK"|"DAESHIN"|"SHERPA"|"MWD_API"|"SMARTKARGO"|"DNJ_EXPRESS"|"GOPEOPLE"|"MYSENDLE_API"|"ARAMEX_API"|"PIDGE"|"THAIPARCELS"|"PANTHER_REFERENCE_API"|"POSTAPLUS"|"BUFFALO"|"U_ENVIOS"|"ELITE_CO"|"BARQEXP"|"ROCHE_INTERNAL_SFTP"|"DBSCHENKER_ICELAND"|"TNT_FR_REFERENCE"|"NEWGISTICSAPI"|"GLOVO"|"GWLOGIS_API"|"SPREETAIL_API"|"MOOVA"|"PLYCONGROUP"|"USPS_WEBHOOK"|"REIMAGINEDELIVERY"|"EDF_FTP"|"DAO365"|"BIOCAIR_FTP"|"RANSA_WEBHOOK"|"SHIPXPRES"|"COURANT_PLUS_API"|"SHIPA"|"HOMELOGISTICS"|"DX"|"POSTE_ITALIANE_PACCOCELERE"|"TOLL_WEBHOOK"|"LCTBR_API"|"DX_FREIGHT"|"DHL_SFTP"|"SHIPROCKET"|"UBER_WEBHOOK"|"STATOVERNIGHT"|"BURD"|"FASTSHIP"|"IBVENTURE_WEBHOOK"|"GATI_KWE_API"|"CRYOPDP_FTP"|"HUBBED"|"TIPSA_API"|"ARASKARGO"|"THIJS_NL"|"ATSHEALTHCARE_REFERENCE"|"99MINUTOS"|"HELLENIC_POST"|"HSM_GLOBAL"|"MNX"|"NMTRANSFER"|"LOGYSTO"|"INDIA_POST_INT"|"AMAZON_FBA_SWISHIP_IN"|"SRT_TRANSPORT"|"BOMI"|"DELIVERR_SFTP"|"HSDEXPRESS"|"SIMPLETIRE_WEBHOOK"|"HUNTER_EXPRESS_SFTP"|"UPS_API"|"WOOYOUNG_LOGISTICS_SFTP"|"PHSE_API"|"WISH_EMAIL_PUSH"|"NORTHLINE"|"MEDAFRICA"|"DPD_AT_SFTP"|"ANTERAJA"|"DHL_GLOBAL_FORWARDING_API"|"LBCEXPRESS_API"|"SIMSGLOBAL"|"CDLDELIVERS"|"TYP"|"TESTING_COURIER_WEBHOOK"|"PANDAGO_API"|"ROYAL_MAIL_FTP"|"THUNDEREXPRESS"|"SECRETLAB_WEBHOOK"|"SETEL"|"JD_WORLDWIDE"|"DPD_RU_API"|"ARGENTS_WEBHOOK"|"POSTONE"|"TUSKLOGISTICS"|"RHENUS_UK_API"|"TAQBIN_SG_API"|"INNTRALOG_SFTP"|"DAYROSS"|"CORREOSEXPRESS_API"|"INTERNATIONAL_SEUR_API"|"YODEL_API"|"HEROEXPRESS"|"DHL_SUPPLYCHAIN_IN"|"URGENT_CARGUS"|"FRONTDOORCORP"|"JTEXPRESS_PH"|"PARCELSTARS_WEBHOOK"|"DPD_SK_SFTP"|"MOVIANTO"|"OZEPARTS_SHIPPING"|"KARGOMKOLAY"|"TRUNKRS"|"OMNIRPS_WEBHOOK"|"CHILEXPRESS"|"TESTING_COURIER"|"JNE_API"|"BJSHOMEDELIVERY_FTP"|"DEXPRESS_WEBHOOK"|"USPS_API"|"TRANSVIRTUAL"|"SOLISTICA_API"|"CHIENVENTURE_WEBHOOK"|"DPD_UK_SFTP"|"INPOST_UK"|"JAVIT"|"ZTO_DOMESTIC"|"DHL_GT_API"|"CEVA_TRACKING"|"KOMON_EXPRESS"|"EASTWESTCOURIER_FTP"|"DANNIAO"|"SPECTRAN"|"DELIVER_IT"|"RELAISCOLIS"|"GLS_SPAIN_API"|"POSTPLUS"|"AIRTERRA"|"GIO_ECOURIER_API"|"DPD_CH_SFTP"|"FEDEX_API"|"INTERSMARTTRANS"|"HERMES_UK_SFTP"|"EXELOT_FTP"|"DHL_PA_API"|"VIRTRANSPORT_SFTP"|"WORLDNET"|"INSTABOX_WEBHOOK"|"KNG"|"FLASHEXPRESS_WEBHOOK"|"MAGYAR_POSTA_API"|"WESHIP_API"|"OHI_WEBHOOK"|"MUDITA"|"BLUEDART_API"|"T_CAT_API"|"ADS"|"HERMES_IT"|"FITZMARK_API"|"POSTI_API"|"SMSA_EXPRESS_WEBHOOK"|"TAMERGROUP_WEBHOOK"|"LIVRAPIDE"|"NIPPON_EXPRESS"|"BETTERTRUCKS"|"FAN"|"PB_USPSFLATS_FTP"|"PARCELRIGHT"|"ITHINKLOGISTICS"|"KERRY_EXPRESS_TH_WEBHOOK"|"ECOUTIER"|"SHOWL"|"BRT_IT_API"|"RIXONHK_API"|"DBSCHENKER_API"|"ILYANGLOGIS"|"MAIL_BOX_ETC"|"WESHIP"|"DHL_GLOBAL_MAIL_API"|"ACTIVOS24_API"|"ATSHEALTHCARE"|"LUWJISTIK"|"GW_WORLD"|"FAIRSENDEN_API"|"SERVIP_WEBHOOK"|"SWISHIP"|"TANET"|"HOTSIN_CARGO"|"DIREX"|"HUANTONG"|"IMILE_API"|"BDMNET"|"AUEXPRESS"|"NYTLOGISTICS"|"DSV_REFERENCE"|"NOVOFARMA_WEBHOOK"|"AITWORLDWIDE_SFTP"|"SHOPOLIVE"|"FNF_ZA"|"DHL_ECOMMERCE_GC"|"FETCHR"|"STARLINKS_API"|"YYEXPRESS"|"SERVIENTREGA"|"HANJIN"|"SPANISH_SEUR_FTP"|"DX_B2B_CONNUM"|"HELTHJEM_API"|"INEXPOST"|"A2B_BA"|"RHENUS_GROUP"|"SBERLOGISTICS_RU"|"MALCA_AMIT"|"PPL"|"OSM_WORLDWIDE_SFTP"|"ACILOGISTIX"|"OPTIMACOURIER"|"NOVA_POSHTA_API"|"LOGGI"|"YIFAN"|"MYDYNALOGIC"|"MORNINGLOBAL"|"CONCISE_API"|"FXTRAN"|"DELIVERYOURPARCEL_ZA"|"UPARCEL"|"MOBI_BR"|"LOGINEXT_WEBHOOK"|"EMS"|"SPEEDY";

public type authentication_flow anydata;

# The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
@constraint:String {maxLength: 2, minLength: 2, pattern: re `^([A-Z]{2}|C2)$`}
public type country_code string;

# Represents the Headers record for the operation: orders.authorize
public type OrdersAuthorizeHeaders record {
    # The server stores keys for 6 hours. The API callers can request the times to up to 72 hours by speaking to their Account Manager.
    string PayPal\-Request\-Id?;
    # An API-caller-provided JSON Web Token (JWT) assertion that identifies the merchant. For details, see <a href="/api/rest/requests/#paypal-auth-assertion">PayPal-Auth-Assertion</a>.
    string PayPal\-Auth\-Assertion?;
    # The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul>
    @constraint:String {maxLength: 25, minLength: 1, pattern: re `^[a-zA-Z=]*$`}
    string Prefer = "return=representation";
    string PayPal\-Client\-Metadata\-Id?;
};

# Supplementary data about a payment. This object passes information that can be used to improve risk assessments and processing costs, for example, by providing Level 2 and Level 3 payment data.
public type supplementary_data record {
    # Merchants and partners can add Level 2 and 3 data to payments to reduce risk and payment processing costs. For more information about processing payments, see <a href="https://developer.paypal.com/docs/checkout/advanced/processing/">checkout</a> or <a href="https://developer.paypal.com/docs/multiparty/checkout/advanced/processing/">multiparty checkout</a>.
    card_supplementary_data card?;
};

# Information used to pay Bancontact.
public type bancontact record {
    # The full name representation like Mr J Smith.
    full_name name?;
    # The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
    country_code country_code?;
    # The business identification code (BIC). In payments systems, a BIC is used to identify a specific business, most commonly a bank.
    bic bic?;
    # The last characters of the IBAN used to pay.
    iban_last_chars iban_last_chars?;
    # The last digits of the card used to fund the Bancontact payment.
    @constraint:String {maxLength: 4, minLength: 4, pattern: re `[0-9]{4}`}
    string card_last_digits?;
    altpay_recurring_attributes attributes?;
};

# Information used to pay using P24(Przelewy24).
public type p24 record {
    # The full name representation like Mr J Smith.
    full_name name?;
    # The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>
    email_address email?;
    # The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
    country_code country_code?;
    # P24 generated payment description.
    @constraint:String {maxLength: 2000, minLength: 1}
    string payment_descriptor?;
    # Numeric identifier of the payment scheme or bank used for the payment.
    @constraint:String {maxLength: 300, minLength: 1}
    string method_id?;
    # Friendly name of the payment scheme or bank used for the payment.
    @constraint:String {maxLength: 2000, minLength: 1}
    string method_description?;
};

# The name of the party.
public type name record {
    # The prefix, or title, to the party's name.
    @constraint:String {maxLength: 140}
    string prefix?;
    # When the party is a person, the party's given, or first, name.
    @constraint:String {maxLength: 140}
    string given_name?;
    # When the party is a person, the party's surname or family name. Also known as the last name. Required when the party is a person. Use also to store multiple surnames including the matronymic, or mother's, surname.
    @constraint:String {maxLength: 140}
    string surname?;
    # When the party is a person, the party's middle name. Use also to store multiple middle names including the patronymic, or father's, middle name.
    @constraint:String {maxLength: 140}
    string middle_name?;
    # The suffix for the party's name.
    @constraint:String {maxLength: 140}
    string suffix?;
    # DEPRECATED. The party's alternate name. Can be a business name, nickname, or any other name that cannot be split into first, last name. Required when the party is a business.
    @constraint:String {maxLength: 300}
    string alternate_full_name?;
    # When the party is a person, the party's full name.
    @constraint:String {maxLength: 300}
    string full_name?;
};

# The date and time stamps that are common to authorized payment, captured payment, and refund transactions.
public type activity_timestamps record {
    # The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.<blockquote><strong>Note:</strong> The regular expression provides guidance but does not reject all invalid dates.</blockquote>
    date_time create_time?;
    # The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.<blockquote><strong>Note:</strong> The regular expression provides guidance but does not reject all invalid dates.</blockquote>
    date_time update_time?;
};

# The tracking information for a shipment.
public type shipment_tracker record {
    # The PayPal transaction ID.
    @constraint:String {maxLength: 50, minLength: 1, pattern: re `^[a-zA-Z0-9]*$`}
    string transaction_id;
    # The tracking number for the shipment. This property supports Unicode.
    @constraint:String {maxLength: 64, minLength: 1}
    string tracking_number?;
    # The tracking number type.
    shipment_tracking_number_type tracking_number_type?;
    # The status of the item shipment. For allowed values, see <a href="/docs/tracking/reference/shipping-status/">Shipping Statuses</a>.
    shipment_tracking_status status;
    # The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.
    date_no_time shipment_date?;
    # The carrier for the shipment. Some carriers have a global version as well as local subsidiaries. The subsidiaries are repeated over many countries and might also have an entry in the global list. Choose the carrier for your country. If the carrier is not available for your country, choose the global version of the carrier. If your carrier name is not in the list, set `carrier` to `OTHER` and set carrier name in `carrier_name_other`. For allowed values, see <a href="/docs/tracking/reference/carriers/">Carriers</a>.
    shipment_carrier carrier?;
    # The name of the carrier for the shipment. Provide this value only if the carrier parameter is OTHER. This property supports Unicode.
    @constraint:String {maxLength: 64, minLength: 1}
    string carrier_name_other?;
    # The postage payment ID. This property supports Unicode.
    @constraint:String {maxLength: 64, minLength: 1}
    string postage_payment_id?;
    # If true, sends an email notification to the buyer of the PayPal transaction. The email contains the tracking information that was uploaded through the API.
    boolean notify_buyer = false;
    # The quantity of items shipped.
    @constraint:Int {minValue: 1, maxValue: 100}
    int quantity?;
    # Indicates whether the carrier validated the tracking number.
    boolean tracking_number_validated?;
    # The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.<blockquote><strong>Note:</strong> The regular expression provides guidance but does not reject all invalid dates.</blockquote>
    date_time last_updated_time?;
    # To denote whether the shipment is sent forward to the receiver or returned back.
    "FORWARD"|"RETURN" shipment_direction?;
    # To denote which party uploaded the shipment tracking info.
    "MERCHANT"|"CONSUMER"|"PARTNER" shipment_uploader?;
};

# Additional attributes associated with the use of this Venmo Wallet.
public type venmo_wallet_attributes record {
    # The details about a customer in PayPal's system of record.
    customer customer?;
    # Resource consolidating common request and response attirbutes for vaulting Venmo Wallet.
    vault_venmo_wallet_base vault?;
};

# Information used to pay using BLIK.
public type blik record {
    # The full name representation like Mr J Smith.
    full_name name?;
    # The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
    country_code country_code?;
    # The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>
    email_address email?;
    # Information used to pay using BLIK one-click flow.
    blik_one_click_response one_click?;
};

# The purchase unit request. Includes required information for the payment contract.
public type purchase_unit_request record {
    # The API caller-provided external ID for the purchase unit. Required for multiple purchase units when you must update the order through `PATCH`. If you omit this value and the order contains only one purchase unit, PayPal sets this value to `default`.
    @constraint:String {maxLength: 256, minLength: 1}
    string reference_id?;
    # The total order amount with an optional breakdown that provides details, such as the total item amount, total tax amount, shipping, handling, insurance, and discounts, if any.<br/>If you specify `amount.breakdown`, the amount equals `item_total` plus `tax_total` plus `shipping` plus `handling` plus `insurance` minus `shipping_discount` minus discount.<br/>The amount must be a positive number. For listed of supported currencies and decimal precision, see the PayPal REST APIs <a href="/docs/integration/direct/rest/currency-codes/">Currency Codes</a>.
    amount_with_breakdown amount;
    # The merchant who receives the funds and fulfills the order. The merchant is also known as the payee.
    payee payee?;
    # Any additional payment instructions to be consider during payment processing. This processing instruction is applicable for Capturing an order or Authorizing an Order.
    payment_instruction payment_instruction?;
    # The purchase description. The maximum length of the character is dependent on the type of characters used. The character length is specified assuming a US ASCII character. Depending on type of character; (e.g. accented character, Japanese characters) the number of characters that that can be specified as input might not equal the permissible max length.
    @constraint:String {maxLength: 127, minLength: 1}
    string description?;
    # The API caller-provided external ID. Used to reconcile client transactions with PayPal transactions. Appears in transaction and settlement reports but is not visible to the payer.
    @constraint:String {maxLength: 127, minLength: 1}
    string custom_id?;
    # The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives.
    @constraint:String {maxLength: 127, minLength: 1}
    string invoice_id?;
    # The soft descriptor is the dynamic text used to construct the statement descriptor that appears on a payer's card statement.<br><br>If an Order is paid using the "PayPal Wallet", the statement descriptor will appear in following format on the payer's card statement: <code><var>PAYPAL_prefix</var>+(space)+<var>merchant_descriptor</var>+(space)+ <var>soft_descriptor</var></code><blockquote><strong>Note:</strong> The merchant descriptor is the descriptor of the merchant’s payment receiving preferences which can be seen by logging into the merchant account https://www.sandbox.paypal.com/businessprofile/settings/info/edit</blockquote>The <code>PAYPAL</code> prefix uses 8 characters. Only the first 22 characters will be displayed in the statement. <br>For example, if:<ul><li>The PayPal prefix toggle is <code>PAYPAL *</code>.</li><li>The merchant descriptor in the profile is <code>Janes Gift</code>.</li><li>The soft descriptor is <code>800-123-1234</code>.</li></ul>Then, the statement descriptor on the card is <code>PAYPAL * Janes Gift 80</code>.
    @constraint:String {maxLength: 22, minLength: 1}
    string soft_descriptor?;
    # An array of items that the customer purchases from the merchant.
    item[] items?;
    # The shipping details.
    shipping_detail shipping?;
    # Supplementary data about a payment. This object passes information that can be used to improve risk assessments and processing costs, for example, by providing Level 2 and Level 3 payment data.
    supplementary_data supplementary_data?;
};

# An array of JSON patch objects to apply partial updates to resources.
public type patch_request patch[];

public type apple_pay_attributes anydata;

public type CardRequestAllOf2 record {
    # The PayPal-generated ID for the vaulted payment source. This ID should be stored on the merchant's server so the saved payment source can be used for future transactions.
    vault_id vault_id?;
    # Provides additional details to process a payment using a `card` that has been stored or is intended to be stored (also referred to as stored_credential or card-on-file).<br/>Parameter compatibility:<br/><ul><li>`payment_type=ONE_TIME` is compatible only with `payment_initiator=CUSTOMER`.</li><li>`usage=FIRST` is compatible only with `payment_initiator=CUSTOMER`.</li><li>`previous_transaction_reference` or `previous_network_transaction_reference` is compatible only with `payment_initiator=MERCHANT`.</li><li>Only one of the parameters - `previous_transaction_reference` and `previous_network_transaction_reference` - can be present in the request.</li></ul>
    card_stored_credential stored_credential?;
    # The Third Party Network token used to fund a payment.
    network_token_request network_token?;
    # Customizes the payer experience during the 3DS Approval for payment.
    card_experience_context experience_context?;
};

# Electronic Commerce Indicator (ECI). The ECI value is part of the 2 data elements that indicate the transaction was processed electronically. This should be passed on the authorization transaction to the Gateway/Processor.
public type eci_flag "MASTERCARD_NON_3D_SECURE_TRANSACTION"|"MASTERCARD_ATTEMPTED_AUTHENTICATION_TRANSACTION"|"MASTERCARD_FULLY_AUTHENTICATED_TRANSACTION"|"FULLY_AUTHENTICATED_TRANSACTION"|"ATTEMPTED_AUTHENTICATION_TRANSACTION"|"NON_3D_SECURE_TRANSACTION";

public type country_code\-2 string;

# Indicates if this is a `first` or `subsequent` payment using a stored payment source (also referred to as stored credential or card on file).
public type stored_payment_source_usage_type "FIRST"|"SUBSEQUENT"|"DERIVED";

public type google_pay_request anydata;

# The details of the authorized payment status.
public type authorization_status_details record {
    # The reason why the authorized status is `PENDING`.
    "PENDING_REVIEW" reason?;
};

public type bin_detailsProductsItemsString string;

# Customizes the payer experience during the approval process for the payment.
public type experience_context_base record {
    # The label that overrides the business name in the PayPal account on the PayPal site. The pattern is defined by an external party and supports Unicode.
    @constraint:String {maxLength: 127, minLength: 1, pattern: re `^.*$`}
    string brand_name?;
    # The [language tag](https://tools.ietf.org/html/bcp47#section-2) for the language in which to localize the error-related strings, such as messages, issues, and suggested actions. The tag is made up of the [ISO 639-2 language code](https://www.loc.gov/standards/iso639-2/php/code_list.php), the optional [ISO-15924 script tag](https://www.unicode.org/iso15924/codelists.html), and the [ISO-3166 alpha-2 country code](/api/rest/reference/country-codes/) or [M49 region code](https://unstats.un.org/unsd/methodology/m49/).
    language locale?;
    # The location from which the shipping address is derived.
    "GET_FROM_FILE"|"NO_SHIPPING"|"SET_PROVIDED_ADDRESS" shipping_preference = "GET_FROM_FILE";
    # Describes the URL.
    url return_url?;
    # Describes the URL.
    url cancel_url?;
};

# Information needed to pay using ApplePay.
public type apple_pay_request record {
    # ApplePay transaction identifier, this will be the unique identifier for this transaction provided by Apple. The pattern is defined by an external party and supports Unicode.
    @constraint:String {maxLength: 250, minLength: 1, pattern: re `^.*$`}
    string id?;
    # The full name representation like Mr J Smith.
    full_name name?;
    # The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>
    email_address email_address?;
    # The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).
    phone phone_number?;
    # Information about the Payment data obtained by decrypting Apple Pay token.
    apple_pay_decrypted_token_data decrypted_token?;
    # Provides additional details to process a payment using a `card` that has been stored or is intended to be stored (also referred to as stored_credential or card-on-file).<br/>Parameter compatibility:<br/><ul><li>`payment_type=ONE_TIME` is compatible only with `payment_initiator=CUSTOMER`.</li><li>`usage=FIRST` is compatible only with `payment_initiator=CUSTOMER`.</li><li>`previous_transaction_reference` or `previous_network_transaction_reference` is compatible only with `payment_initiator=MERCHANT`.</li><li>Only one of the parameters - `previous_transaction_reference` and `previous_network_transaction_reference` - can be present in the request.</li></ul>
    card_stored_credential stored_credential?;
    # The PayPal-generated ID for the vaulted payment source. This ID should be stored on the merchant's server so the saved payment source can be used for future transactions.
    vault_id vault_id?;
    apple_pay_attributes attributes?;
};

# The status of a captured payment.
public type capture_status record {
    # The status of the captured payment.
    "COMPLETED"|"DECLINED"|"PARTIALLY_REFUNDED"|"PENDING"|"REFUNDED"|"FAILED" status?;
    # The details of the captured payment status.
    capture_status_details status_details?;
};

# The level 3 card processing data collections, If your merchant account has been configured for Level 3 processing this field will be passed to the processor on your behalf. Please contact your PayPal Technical Account Manager to define level 3 data for your business.
public type level_3_card_processing_data record {
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money shipping_amount?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money duty_amount?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money discount_amount?;
    # The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).
    address_portable shipping_address?;
    # Use this field to specify the postal code of the shipping location.
    @constraint:String {maxLength: 60, minLength: 1, pattern: re `^[a-zA-Z0-9_'.-]*$`}
    string ships_from_postal_code?;
    # A list of the items that were purchased with this payment. If your merchant account has been configured for Level 3 processing this field will be passed to the processor on your behalf.
    @constraint:Array {maxLength: 100, minLength: 1}
    line_item[] line_items?;
};

# An Internet Protocol address (IP address). This address assigns a numerical label to each device that is connected to a computer network through the Internet Protocol. Supports IPv4 and IPv6 addresses.
@constraint:String {maxLength: 39, minLength: 7, pattern: re `^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\-]*[A-Za-z0-9])$|^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$`}
public type ip_address string;

# Customizes the payer confirmation experience.
public type order_confirm_application_context record {
    # Label to present to your payer as part of the PayPal hosted web experience.
    @constraint:String {maxLength: 127, minLength: 1}
    string brand_name?;
    # The [language tag](https://tools.ietf.org/html/bcp47#section-2) for the language in which to localize the error-related strings, such as messages, issues, and suggested actions. The tag is made up of the [ISO 639-2 language code](https://www.loc.gov/standards/iso639-2/php/code_list.php), the optional [ISO-15924 script tag](https://www.unicode.org/iso15924/codelists.html), and the [ISO-3166 alpha-2 country code](/api/rest/reference/country-codes/) or [M49 region code](https://unstats.un.org/unsd/methodology/m49/).
    language locale?;
    # The URL where the customer is redirected after the customer approves the payment.
    @constraint:String {maxLength: 4000, minLength: 10}
    string return_url?;
    # The URL where the customer is redirected after the customer cancels the payment.
    @constraint:String {maxLength: 4000, minLength: 10}
    string cancel_url?;
    # Provides additional details to process a payment using a `payment_source` that has been stored or is intended to be stored (also referred to as stored_credential or card-on-file).<br/>Parameter compatibility:<br/><ul><li>`payment_type=ONE_TIME` is compatible only with `payment_initiator=CUSTOMER`.</li><li>`usage=FIRST` is compatible only with `payment_initiator=CUSTOMER`.</li><li>`previous_transaction_reference` or `previous_network_transaction_reference` is compatible only with `payment_initiator=MERCHANT`.</li><li>Only one of the parameters - `previous_transaction_reference` and `previous_network_transaction_reference` - can be present in the request.</li></ul>
    stored_payment_source stored_payment_source?;
};

# The platform or partner fee, commission, or brokerage fee that is associated with the transaction. Not a separate or isolated transaction leg from the external perspective. The platform fee is limited in scope and is always associated with the original payment for the purchase unit.
public type platform_fee record {
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money amount;
    # The details for the merchant who receives the funds and fulfills the order. The merchant is also known as the payee.
    payee_base payee?;
};

# The breakdown of the refund.
public type MerchantPayableBreakdown record {
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money gross_amount?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money paypal_fee?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money paypal_fee_in_receivable_currency?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money net_amount?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money net_amount_in_receivable_currency?;
    # An array of platform or partner fees, commissions, or brokerage fees for the refund.
    @constraint:Array {maxLength: 1}
    platform_fee[] platform_fees?;
    # An array of breakdown values for the net amount. Returned when the currency of the refund is different from the currency of the PayPal account where the payee holds their funds.
    net_amount_breakdown_item[] net_amount_breakdown?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money total_refunded_amount?;
};

# The currency and amount for a financial transaction, such as a balance or payment due.
public type money record {
    # The [three-character ISO-4217 currency code](/api/rest/reference/currency-codes/) that identifies the currency.
    currency_code currency_code;
    # The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency Codes](/api/rest/reference/currency-codes/).
    @constraint:String {maxLength: 32, pattern: re `^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$`}
    string value;
};

public type RefundAllOf2 record {
    # The PayPal-generated ID for the refund.
    string id?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money amount?;
    # The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives.
    string invoice_id?;
    # The API caller-provided external ID. Used to reconcile API caller-initiated transactions with PayPal transactions. Appears in transaction and settlement reports.
    @constraint:String {maxLength: 127, minLength: 1, pattern: re `^[A-Za-z0-9-_.,]*$`}
    string custom_id?;
    # Reference ID issued for the card transaction. This ID can be used to track the transaction across processors, card brands and issuing banks.
    @constraint:String {maxLength: 36, minLength: 1, pattern: re `^[a-zA-Z0-9]+$`}
    string acquirer_reference_number?;
    # The reason for the refund. Appears in both the payer's transaction history and the emails that the payer receives.
    string note_to_payer?;
    # The breakdown of the refund.
    MerchantPayableBreakdown seller_payable_breakdown?;
    # The details for the merchant who receives the funds and fulfills the order. The merchant is also known as the payee.
    payee_base payer?;
    # An array of related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
    link_description[] links?;
};

# The total order amount with an optional breakdown that provides details, such as the total item amount, total tax amount, shipping, handling, insurance, and discounts, if any.<br/>If you specify `amount.breakdown`, the amount equals `item_total` plus `tax_total` plus `shipping` plus `handling` plus `insurance` minus `shipping_discount` minus discount.<br/>The amount must be a positive number. For listed of supported currencies and decimal precision, see the PayPal REST APIs <a href="/docs/integration/direct/rest/currency-codes/">Currency Codes</a>.
public type amount_with_breakdown record {
    *money;
    *AmountWithBreakdownAllOf2;
};

# The business identification code (BIC). In payments systems, a BIC is used to identify a specific business, most commonly a bank.
@constraint:String {maxLength: 11, minLength: 8, pattern: re `^[A-Z-a-z0-9]{4}[A-Z-a-z]{2}[A-Z-a-z0-9]{2}([A-Z-a-z0-9]{3})?$`}
public type bic string;

public type cobranded_cardLabelsItemsString string;

public type LineItemAllOf2 record {
    # Code used to classify items purchased and track the total amount spent across various categories of products and services. Different corporate purchasing organizations may use different standards, but the United Nations Standard Products and Services Code (UNSPSC) is frequently used.
    @constraint:String {maxLength: 12, minLength: 1, pattern: re `^[a-zA-Z0-9_'.-]*$`}
    string commodity_code?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money discount_amount?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money total_amount?;
    # Unit of measure is a standard used to express the magnitude of a quantity in international trade. Most commonly used (but not limited to) examples are: Acre (ACR), Ampere (AMP), Centigram (CGM), Centimetre (CMT), Cubic inch (INQ), Cubic metre (MTQ), Fluid ounce (OZA), Foot (FOT), Hour (HUR), Item (ITM), Kilogram (KGM), Kilometre (KMT), Kilowatt (KWT), Liquid gallon (GLL), Liter (LTR), Pounds (LBS), Square foot (FTK).
    @constraint:String {maxLength: 12, minLength: 1, pattern: re `^[a-zA-Z0-9_'.-]*$`}
    string unit_of_measure?;
};

public type VaultPaypalWalletBaseAllOf2 record {
    # The description displayed to PayPal consumer on the approval flow for PayPal, as well as on the PayPal payment token management experience on PayPal.com.
    @constraint:String {maxLength: 128, minLength: 1}
    string description?;
    # Expected business/pricing model for the billing agreement.
    "IMMEDIATE"|"DEFERRED"|"RECURRING_PREPAID"|"RECURRING_POSTPAID"|"THRESHOLD_PREPAID"|"THRESHOLD_POSTPAID" usage_pattern?;
    # The shipping details.
    shipping_detail shipping?;
    # The usage type associated with the PayPal payment token.
    "MERCHANT"|"PLATFORM" usage_type?;
    vault_owner_id owner_id?;
    # The customer type associated with the PayPal payment token. This is to indicate whether the customer acting on the merchant / platform is either a business or a consumer.
    "CONSUMER"|"BUSINESS" customer_type = "CONSUMER";
    # Create multiple payment tokens for the same payer, merchant/platform combination. Use this when the customer has not logged in at merchant/platform. The payment token thus generated, can then also be used to create the customer account at merchant/platform. Use this also when multiple payment tokens are required for the same payer, different customer at merchant/platform. This helps to identify customers distinctly even though they may share the same PayPal account. This only applies to PayPal payment source.
    boolean permit_multiple_payment_tokens = false;
};

# Results of 3D Secure Authentication.
public type three_d_secure_authentication_response record {
    # Transactions status result identifier. The outcome of the issuer's authentication.
    pares_status authentication_status?;
    # Status of Authentication eligibility.
    enrolled enrollment_status?;
};

# The customer who approves and pays for the order. The customer is also known as the payer.
public type payer record {
    *payer_base;
    *PayerAllOf2;
};

public type OrderTrackerRequestAllOf2 record {
    # The PayPal capture ID.
    @constraint:String {maxLength: 50, minLength: 1, pattern: re `^[a-zA-Z0-9]*$`}
    string capture_id;
    # If true, sends an email notification to the payer of the PayPal transaction. The email contains the tracking information that was uploaded through the API.
    boolean notify_payer = false;
    # An array of details of items in the shipment.
    tracker_item[] items?;
};

# The details of the refund status.
public type refund_status_details record {
    # The reason why the refund has the `PENDING` or `FAILED` status.
    "ECHECK" reason?;
};

# The merchant who receives the funds and fulfills the order. The merchant is also known as the payee.
public type payee record {
    *payee_base;
    *PayeeAllOf2;
};

# The authorized payment transaction.
public type authorization record {
    *authorization_status;
    *AuthorizationAllOf2;
    *activity_timestamps;
};

# The PayPal Wallet response.
public type paypal_wallet_response record {
    # The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>
    email email_address?;
    # The PayPal payer ID, which is a masked version of the PayPal account number intended for use with third parties. The account number is reversibly encrypted and a proprietary variant of Base32 is used to encode the result.
    account_id\-2 account_id?;
    # The account status indicates whether the buyer has verified the financial details associated with their PayPal account.
    "VERIFIED"|"UNVERIFIED" account_status?;
    # The name of the party.
    name\-2 name?;
    # The phone type.
    phone_type\-2 phone_type?;
    # The phone number in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).
    phone\-2 phone_number?;
    # The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.
    date_no_time birth_date?;
    # The tax ID of the customer. The customer is also known as the payer. Both `tax_id` and `tax_id_type` are required.
    tax_info tax_info?;
    # The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).
    address_portable\-2 address?;
    # Additional attributes associated with the use of a PayPal Wallet.
    paypal_wallet_attributes_response attributes?;
};

public type tracker_status anydata;

# The purchase unit details. Used to capture required information for the payment contract.
public type purchase_unit record {
    # The API caller-provided external ID for the purchase unit. Required for multiple purchase units when you must update the order through `PATCH`. If you omit this value and the order contains only one purchase unit, PayPal sets this value to `default`. <blockquote><strong>Note:</strong> If there are multiple purchase units, <code>reference_id</code> is required for each purchase unit.</blockquote>
    @constraint:String {maxLength: 256, minLength: 1}
    string reference_id?;
    # The total order amount with an optional breakdown that provides details, such as the total item amount, total tax amount, shipping, handling, insurance, and discounts, if any.<br/>If you specify `amount.breakdown`, the amount equals `item_total` plus `tax_total` plus `shipping` plus `handling` plus `insurance` minus `shipping_discount` minus discount.<br/>The amount must be a positive number. For listed of supported currencies and decimal precision, see the PayPal REST APIs <a href="/docs/integration/direct/rest/currency-codes/">Currency Codes</a>.
    amount_with_breakdown amount?;
    # The merchant who receives the funds and fulfills the order. The merchant is also known as the payee.
    payee payee?;
    # Any additional payment instructions to be consider during payment processing. This processing instruction is applicable for Capturing an order or Authorizing an Order.
    payment_instruction payment_instruction?;
    # The purchase description.
    @constraint:String {maxLength: 127, minLength: 1}
    string description?;
    # The API caller-provided external ID. Used to reconcile API caller-initiated transactions with PayPal transactions. Appears in transaction and settlement reports.
    @constraint:String {maxLength: 127, minLength: 1}
    string custom_id?;
    # The API caller-provided external invoice ID for this order.
    @constraint:String {maxLength: 127, minLength: 1}
    string invoice_id?;
    # The PayPal-generated ID for the purchase unit. This ID appears in both the payer's transaction history and the emails that the payer receives. In addition, this ID is available in transaction and settlement reports that merchants and API callers can use to reconcile transactions. This ID is only available when an order is saved by calling <code>v2/checkout/orders/id/save</code>.
    @constraint:String {maxLength: 19, minLength: 1}
    string id?;
    # The payment descriptor on account transactions on the customer's credit card statement, that PayPal sends to processors. The maximum length of the soft descriptor information that you can pass in the API field is 22 characters, in the following format:<code>22 - len(PAYPAL * (8)) - len(<var>Descriptor in Payment Receiving Preferences of Merchant account</var> + 1)</code>The PAYPAL prefix uses 8 characters.<br/><br/>The soft descriptor supports the following ASCII characters:<ul><li>Alphanumeric characters</li><li>Dashes</li><li>Asterisks</li><li>Periods (.)</li><li>Spaces</li></ul>For Wallet payments marketplace integrations:<ul><li>The merchant descriptor in the Payment Receiving Preferences must be the marketplace name.</li><li>You can't use the remaining space to show the customer service number.</li><li>The remaining spaces can be a combination of seller name and country.</li></ul><br/>For unbranded payments (Direct Card) marketplace integrations, use a combination of the seller name and phone number.
    @constraint:String {maxLength: 22, minLength: 1}
    string soft_descriptor?;
    # An array of items that the customer purchases from the merchant.
    item[] items?;
    # The order shipping details.
    shipping_with_tracking_details shipping?;
    # Supplementary data about a payment. This object passes information that can be used to improve risk assessments and processing costs, for example, by providing Level 2 and Level 3 payment data.
    supplementary_data supplementary_data?;
    # The collection of payments, or transactions, for a purchase unit in an order. For example, authorized payments, captured payments, and refunds.
    payment_collection payments?;
};

# The payment source definition.
public type payment_source record {
    # The payment card to use to fund a payment. Can be a credit or debit card.<blockquote><strong>Note:</strong> Passing card number, cvv and expiry directly via the API requires <a href="https://www.pcisecuritystandards.org/pci_security/completing_self_assessment"> PCI SAQ D compliance</a>. <br>*PayPal offers a mechanism by which you do not have to take on the <strong>PCI SAQ D</strong> burden by using hosted fields - refer to <a href="https://developer.paypal.com/docs/checkout/advanced/integrate/">this Integration Guide</a>*.</blockquote>
    card_request card?;
    # The tokenized payment source to fund a payment.
    token token?;
    # A resource that identifies a PayPal Wallet is used for payment.
    paypal_wallet paypal?;
    # Information needed to pay using Bancontact.
    bancontact_request bancontact?;
    # Information needed to pay using BLIK.
    blik_request blik?;
    # Information needed to pay using eps.
    eps_request eps?;
    # Information needed to pay using giropay.
    giropay_request giropay?;
    # Information needed to pay using iDEAL.
    ideal_request ideal?;
    # Information needed to pay using MyBank.
    mybank_request mybank?;
    # Information needed to pay using P24 (Przelewy24).
    p24_request p24?;
    # Information needed to pay using Sofort.
    sofort_request sofort?;
    # Information needed to pay using Trustly.
    trustly_request trustly?;
    # Information needed to pay using ApplePay.
    apple_pay_request apple_pay?;
    google_pay_request google_pay?;
    # Information needed to pay using Venmo.
    venmo_wallet_request venmo?;
};

# The status fields for an authorized payment.
public type authorization_status record {
    # The status for the authorized payment.
    "CREATED"|"CAPTURED"|"DENIED"|"PARTIALLY_CAPTURED"|"VOIDED"|"PENDING" status?;
    # The details of the authorized payment status.
    authorization_status_details status_details?;
};

# Information about the decrypted apple pay payment data for the token like cryptogram, eci indicator.
public type apple_pay_payment_data record {
    # Online payment cryptogram, as defined by 3D Secure. The pattern is defined by an external party and supports Unicode.
    @constraint:String {maxLength: 2000, minLength: 1, pattern: re `^.*$`}
    string cryptogram?;
    # ECI indicator, as defined by 3- Secure. The pattern is defined by an external party and supports Unicode.
    @constraint:String {maxLength: 256, minLength: 1, pattern: re `^.*$`}
    string eci_indicator?;
    # Encoded Apple Pay EMV Payment Structure used for payments in China. The pattern is defined by an external party and supports Unicode.
    @constraint:String {maxLength: 2000, minLength: 1, pattern: re `^.*$`}
    string emv_data?;
    # Bank Key encrypted Apple Pay PIN. The pattern is defined by an external party and supports Unicode.
    @constraint:String {maxLength: 2000, minLength: 1, pattern: re `^.*$`}
    string pin?;
};

# The breakdown of the amount. Breakdown provides details such as total item amount, total tax amount, shipping, handling, insurance, and discounts, if any.
public type amount_breakdown record {
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money item_total?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money shipping?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money handling?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money tax_total?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money insurance?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money shipping_discount?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money discount?;
};

# The details for the items to be purchased.
public type item record {
    # The item name or title.
    @constraint:String {maxLength: 127, minLength: 1}
    string name;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money unit_amount;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money tax?;
    # The item quantity. Must be a whole number.
    @constraint:String {maxLength: 10, pattern: re `^[1-9][0-9]{0,9}$`}
    string quantity;
    # The detailed item description.
    @constraint:String {maxLength: 127}
    string description?;
    # The stock keeping unit (SKU) for the item.
    @constraint:String {maxLength: 127}
    string sku?;
    # The item category type.
    "DIGITAL_GOODS"|"PHYSICAL_GOODS"|"DONATION" category?;
};

# Information needed to pay using Bancontact.
public type bancontact_request record {
    # The full name representation like Mr J Smith.
    full_name name;
    # The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
    country_code country_code;
    # Customizes the payer experience during the approval process for the payment.
    experience_context_base experience_context?;
    altpay_recurring_attributes_request attributes?;
};

# The refund status.
public type refund_status record {
    # The status of the refund.
    "CANCELLED"|"FAILED"|"PENDING"|"COMPLETED" status?;
    # The details of the refund status.
    refund_status_details status_details?;
};

# The exchange rate that determines the amount to convert from one currency to another currency.
public type exchange_rate record {
    # The [three-character ISO-4217 currency code](/api/rest/reference/currency-codes/) that identifies the currency.
    currency_code source_currency?;
    # The [three-character ISO-4217 currency code](/api/rest/reference/currency-codes/) that identifies the currency.
    currency_code target_currency?;
    # The target currency amount. Equivalent to one unit of the source currency. Formatted as integer or decimal value with one to 15 digits to the right of the decimal point.
    string value?;
};

# Customizes the payer experience during the approval process for the payment with PayPal.<blockquote><strong>Note:</strong> Partners and Marketplaces might configure <code>brand_name</code> and <code>shipping_preference</code> during partner account setup, which overrides the request values.</blockquote>
public type order_application_context record {
    # DEPRECATED. The label that overrides the business name in the PayPal account on the PayPal site. The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.brand_name`). Please specify this field in the `experience_context` object instead of the `application_context` object.
    @constraint:String {maxLength: 127, minLength: 1}
    string brand_name?;
    # The [language tag](https://tools.ietf.org/html/bcp47#section-2) for the language in which to localize the error-related strings, such as messages, issues, and suggested actions. The tag is made up of the [ISO 639-2 language code](https://www.loc.gov/standards/iso639-2/php/code_list.php), the optional [ISO-15924 script tag](https://www.unicode.org/iso15924/codelists.html), and the [ISO-3166 alpha-2 country code](/api/rest/reference/country-codes/) or [M49 region code](https://unstats.un.org/unsd/methodology/m49/).
    language locale?;
    # DEPRECATED. DEPRECATED. The type of landing page to show on the PayPal site for customer checkout.  The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.landing_page`). Please specify this field in the `experience_context` object instead of the `application_context` object.
    # 
    # # Deprecated
    @deprecated
    "LOGIN"|"BILLING"|"NO_PREFERENCE" landing_page = "NO_PREFERENCE";
    # DEPRECATED. DEPRECATED. The shipping preference:<ul><li>Displays the shipping address to the customer.</li><li>Enables the customer to choose an address on the PayPal site.</li><li>Restricts the customer from changing the address during the payment-approval process.</li></ul>.  The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.shipping_preference`). Please specify this field in the `experience_context` object instead of the `application_context` object.
    # 
    # # Deprecated
    @deprecated
    "GET_FROM_FILE"|"NO_SHIPPING"|"SET_PROVIDED_ADDRESS" shipping_preference = "GET_FROM_FILE";
    # DEPRECATED. Configures a <strong>Continue</strong> or <strong>Pay Now</strong> checkout flow.  The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.user_action`). Please specify this field in the `experience_context` object instead of the `application_context` object.
    "CONTINUE"|"PAY_NOW" user_action = "CONTINUE";
    # The customer and merchant payment preferences.
    payment_method payment_method?;
    # DEPRECATED. The URL where the customer is redirected after the customer approves the payment. The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.return_url`). Please specify this field in the `experience_context` object instead of the `application_context` object.
    string return_url?;
    # DEPRECATED. The URL where the customer is redirected after the customer cancels the payment. The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.cancel_url`). Please specify this field in the `experience_context` object instead of the `application_context` object.
    string cancel_url?;
    # Provides additional details to process a payment using a `payment_source` that has been stored or is intended to be stored (also referred to as stored_credential or card-on-file).<br/>Parameter compatibility:<br/><ul><li>`payment_type=ONE_TIME` is compatible only with `payment_initiator=CUSTOMER`.</li><li>`usage=FIRST` is compatible only with `payment_initiator=CUSTOMER`.</li><li>`previous_transaction_reference` or `previous_network_transaction_reference` is compatible only with `payment_initiator=MERCHANT`.</li><li>Only one of the parameters - `previous_transaction_reference` and `previous_network_transaction_reference` - can be present in the request.</li></ul>
    stored_payment_source stored_payment_source?;
};

public type ShippingWithTrackingDetailsAllOf2 record {
    # An array of trackers for a transaction.
    tracker[] trackers?;
};

# Information needed to pay using BLIK.
public type blik_request record {
    # The full name representation like Mr J Smith.
    full_name name;
    # The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
    country_code country_code;
    # The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>
    email_address email?;
    # Customizes the payer experience during the approval process for the BLIK payment.
    blik_experience_context experience_context?;
    # Information used to pay using BLIK level_0 flow.
    blik_seamless level_0?;
    # Information used to pay using BLIK one-click flow.
    blik_one_click one_click?;
};

# Information used to pay using eps.
public type eps record {
    # The full name representation like Mr J Smith.
    full_name name?;
    # The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
    country_code country_code?;
    # The business identification code (BIC). In payments systems, a BIC is used to identify a specific business, most commonly a bank.
    bic bic?;
};

public type address_portable\-2 record {
    string address_line_1?;
    string address_line_2?;
    string address_line_3?;
    string admin_area_4?;
    string admin_area_3?;
    string admin_area_2?;
    string admin_area_1?;
    string postal_code?;
    country_code\-2 country_code;
    AddressDetails1 address_details?;
};

# Provides additional details to process a payment using a `payment_source` that has been stored or is intended to be stored (also referred to as stored_credential or card-on-file).<br/>Parameter compatibility:<br/><ul><li>`payment_type=ONE_TIME` is compatible only with `payment_initiator=CUSTOMER`.</li><li>`usage=FIRST` is compatible only with `payment_initiator=CUSTOMER`.</li><li>`previous_transaction_reference` or `previous_network_transaction_reference` is compatible only with `payment_initiator=MERCHANT`.</li><li>Only one of the parameters - `previous_transaction_reference` and `previous_network_transaction_reference` - can be present in the request.</li></ul>
public type stored_payment_source record {
    # The person or party who initiated or triggered the payment.
    payment_initiator payment_initiator;
    # Indicates the type of the stored payment_source payment.
    stored_payment_source_payment_type payment_type;
    # Indicates if this is a `first` or `subsequent` payment using a stored payment source (also referred to as stored credential or card on file).
    stored_payment_source_usage_type usage?;
    # Reference values used by the card network to identify a transaction.
    network_transaction_reference previous_network_transaction_reference?;
};

# Defines how and when the payment source gets vaulted.
public type store_in_vault_instruction "ON_SUCCESS";

# The details of the items in the shipment.
public type tracker_item record {
    # The item name or title.
    @constraint:String {maxLength: 127, minLength: 1}
    string name?;
    # The item quantity. Must be a whole number.
    @constraint:String {maxLength: 10, minLength: 1, pattern: re `^[1-9][0-9]{0,9}$`}
    string quantity?;
    # The stock keeping unit (SKU) for the item. This can contain unicode characters.
    @constraint:String {maxLength: 127, minLength: 1}
    string sku?;
    # The URL to the item being purchased. Visible to buyer and used in buyer experiences.
    @constraint:String {maxLength: 2048, minLength: 1}
    string url?;
    # The URL of the item's image. File type and size restrictions apply. An image that violates these restrictions will not be honored.
    @constraint:String {maxLength: 2048, minLength: 1, pattern: re `^(https:)([/|.|\w|\s|-])*\.(?:jpg|gif|png|jpeg|JPG|GIF|PNG|JPEG)`}
    string image_url?;
    universal_product_code upc?;
};

# The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).
public type phone record {
    # The country calling code (CC), in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the CC and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).
    @constraint:String {maxLength: 3, minLength: 1, pattern: re `^[0-9]{1,3}?$`}
    string country_code;
    # The national number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the country calling code (CC) and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).
    @constraint:String {maxLength: 14, minLength: 1, pattern: re `^[0-9]{1,14}?$`}
    string national_number;
    # The extension number.
    @constraint:String {maxLength: 15, minLength: 1, pattern: re `^[0-9]{1,15}?$`}
    string extension_number?;
};

# Information needed to pay using MyBank.
public type mybank_request record {
    # The full name representation like Mr J Smith.
    full_name name;
    # The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
    country_code country_code;
    # Customizes the payer experience during the approval process for the payment.
    experience_context_base experience_context?;
};

# The detailed breakdown of the capture activity. This is not available for transactions that are in pending state.
public type seller_receivable_breakdown record {
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money gross_amount;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money paypal_fee?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money paypal_fee_in_receivable_currency?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money net_amount?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money receivable_amount?;
    # The exchange rate that determines the amount to convert from one currency to another currency.
    exchange_rate exchange_rate?;
    # An array of platform or partner fees, commissions, or brokerage fees that associated with the captured payment.
    @constraint:Array {maxLength: 1}
    platform_fee[] platform_fees?;
};

# Information used to pay using BLIK one-click flow.
public type blik_one_click record {
    # The 6-digit code used to authenticate a consumer within BLIK.
    @constraint:String {maxLength: 6, minLength: 6, pattern: re `^[0-9]{6}$`}
    string auth_code?;
    # The merchant generated, unique reference serving as a primary identifier for accounts connected between Blik and a merchant.
    @constraint:String {maxLength: 64, minLength: 3, pattern: re `^[ -~]{3,64}$`}
    string consumer_reference;
    # A bank defined identifier used as a display name to allow the payer to differentiate between multiple registered bank accounts.
    @constraint:String {maxLength: 35, minLength: 8, pattern: re `^[ -~]{8,35}$`}
    string alias_label?;
    # A Blik-defined identifier for a specific Blik-enabled bank account that is associated with a given merchant. Used only in conjunction with a Consumer Reference.
    @constraint:String {maxLength: 19, minLength: 1, pattern: re `^[0-9]+$`}
    string alias_key?;
};

# The payment card to use to fund a payment. Can be a credit or debit card.
public type card record {
    # The identifier of the instrument.
    instrument_id id?;
    # The card holder's name as it appears on the card.
    @constraint:String {maxLength: 300, minLength: 1, pattern: re `^.{1,300}$`}
    string name?;
    # The primary account number (PAN) for the payment card.
    @constraint:String {maxLength: 19, minLength: 13, pattern: re `^[0-9]{13,19}$`}
    string number?;
    # The year and month, in ISO-8601 `YYYY-MM` date format. See [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
    date_year_month expiry?;
    # The three- or four-digit security code of the card. Also known as the CVV, CVC, CVN, CVE, or CID. This parameter cannot be present in the request when `payment_initiator=MERCHANT`.
    @constraint:String {maxLength: 4, minLength: 3, pattern: re `^[0-9]{3,4}$`}
    string security_code?;
    # The last digits of the payment card.
    @constraint:String {maxLength: 4, minLength: 2, pattern: re `^[0-9]{2,4}$`}
    string last_digits?;
    # The card network or brand. Applies to credit, debit, gift, and payment cards.
    card_brand card_type?;
    # Type of card. i.e Credit, Debit and so on.
    card_type 'type?;
    # The card network or brand. Applies to credit, debit, gift, and payment cards.
    card_brand brand?;
    # The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).
    address_portable billing_address?;
    # Additional attributes associated with the use of this card.
    card_attributes attributes?;
};

public type PaypalWalletCustomerAllOf2 record {
};

# Information used to pay using BLIK level_0 flow.
public type blik_seamless record {
    # The 6-digit code used to authenticate a consumer within BLIK.
    @constraint:String {maxLength: 6, minLength: 6, pattern: re `^[0-9]{6}$`}
    string auth_code;
};

# The customer who approves and pays for the order. The customer is also known as the payer.
public type payer_base record {
    # The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>
    email email_address?;
    # The account identifier for a PayPal account.
    account_id payer_id?;
};

# Information used to pay using MyBank.
public type mybank record {
    # The full name representation like Mr J Smith.
    full_name name?;
    # The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
    country_code country_code?;
    # The business identification code (BIC). In payments systems, a BIC is used to identify a specific business, most commonly a bank.
    bic bic?;
    # The last characters of the IBAN used to pay.
    iban_last_chars iban_last_chars?;
};

# The refund information.
public type refund record {
    *refund_status;
    *RefundAllOf2;
    *activity_timestamps;
};

# The details about a saved payment source.
public type vault_response record {
    # The PayPal-generated ID for the saved payment source.
    @constraint:String {maxLength: 255, minLength: 1}
    string id?;
    # The vault status.
    # 
    # # Deprecated
    @deprecated
    "VAULTED"|"CREATED"|"APPROVED" status?;
    # The details about a customer in PayPal's system of record.
    customer customer?;
    # An array of request-related HATEOAS links.
    @constraint:Array {maxLength: 10, minLength: 1}
    link_description[] links?;
};

# Information needed to pay using Venmo.
public type venmo_wallet_request record {
    # The PayPal-generated ID for the vaulted payment source. This ID should be stored on the merchant's server so the saved payment source can be used for future transactions.
    vault_id vault_id?;
    # The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>
    email email_address?;
    # Customizes the buyer experience during the approval process for payment with Venmo.<blockquote><strong>Note:</strong> Partners and Marketplaces might configure <code>shipping_preference</code> during partner account setup, which overrides the request values.</blockquote>
    venmo_wallet_experience_context experience_context?;
    # Additional attributes associated with the use of this Venmo Wallet.
    venmo_wallet_attributes attributes?;
};

# Resource consolidating common request and response attirbutes for vaulting Venmo Wallet.
public type vault_venmo_wallet_base record {
    *v3_vault_instruction_base;
    *VaultVenmoWalletBaseAllOf2;
    "MERCHANT"|"PLATFORM" usage_type;
};

# The authorization of an order request.
public type order_authorize_request record {
    # The payment source definition.
    payment_source payment_source?;
};

# A classification for the method of purchase fulfillment.
public type shipping_type "SHIPPING"|"PICKUP"|"PICKUP_IN_STORE"|"PICKUP_FROM_PERSON";

# Information needed to pay using iDEAL.
public type ideal_request record {
    # The full name representation like Mr J Smith.
    full_name name;
    # The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
    country_code country_code;
    # The business identification code (BIC). In payments systems, a BIC is used to identify a specific business, most commonly a bank.
    bic bic?;
    # Customizes the payer experience during the approval process for the payment.
    experience_context_base experience_context?;
    altpay_recurring_attributes_request attributes?;
};

# The [three-character ISO-4217 currency code](/api/rest/reference/currency-codes/) that identifies the currency.
@constraint:String {maxLength: 3, minLength: 3}
public type currency_code string;

# Base vaulting specification. The object can be extended for specific use cases within each payment_source that supports vaulting.
public type v3_vault_instruction_base record {
    # Defines how and when the payment source gets vaulted.
    store_in_vault_instruction store_in_vault;
};

# Customizes the buyer experience during the approval process for payment with Venmo.<blockquote><strong>Note:</strong> Partners and Marketplaces might configure <code>shipping_preference</code> during partner account setup, which overrides the request values.</blockquote>
public type venmo_wallet_experience_context record {
    # The business name of the merchant. The pattern is defined by an external party and supports Unicode.
    @constraint:String {maxLength: 127, minLength: 1, pattern: re `^.*$`}
    string brand_name?;
    # The location from which the shipping address is derived.
    "GET_FROM_FILE"|"NO_SHIPPING"|"SET_PROVIDED_ADDRESS" shipping_preference = "GET_FROM_FILE";
};

# Represents the Headers record for the operation: orders.create
public type OrdersCreateHeaders record {
    # The server stores keys for 6 hours. The API callers can request the times to up to 72 hours by speaking to their Account Manager.
    string PayPal\-Request\-Id?;
    string PayPal\-Client\-Metadata\-Id?;
    # The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul>
    @constraint:String {maxLength: 25, minLength: 1, pattern: re `^[a-zA-Z=]*$`}
    string Prefer = "return=representation";
    string PayPal\-Partner\-Attribution\-Id?;
};

# The tracking response on creation of tracker.
public type tracker record {
    *TrackerAllOf1;
    *activity_timestamps;
};

public type 'order record {
    *activity_timestamps;
    *OrderAllOf2;
};

public type phone_type\-2 "FAX"|"HOME"|"MOBILE"|"OTHER"|"PAGER"|"WORK";

# Transactions status result identifier. The outcome of the issuer's authentication.
public type pares_status "Y"|"N"|"U"|"A"|"C"|"R"|"D"|"I";

public type currency_code\-2 string;

# Venmo wallet response.
public type venmo_wallet_response record {
    # The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>
    email email_address?;
    # The PayPal payer ID, which is a masked version of the PayPal account number intended for use with third parties. The account number is reversibly encrypted and a proprietary variant of Base32 is used to encode the result.
    account_id\-2 account_id?;
    # The Venmo user name chosen by the user, also know as a Venmo handle.
    @constraint:String {maxLength: 50, minLength: 1, pattern: re `^[-a-zA-Z0-9_]*$`}
    string user_name?;
    # The name of the party.
    name\-2 name?;
    # The phone number in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).
    phone\-2 phone_number?;
    # The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).
    address_portable\-2 address?;
    # Additional attributes associated with the use of a Venmo Wallet.
    venmo_wallet_attributes_response attributes?;
};

public type phone\-2 record {
    string national_number;
};

public type exemption_details anydata;

# The tracking number type.
public type shipment_tracking_number_type "CARRIER_PROVIDED"|"E2E_PARTNER_PROVIDED";

# The identifier of the instrument.
@constraint:String {maxLength: 256, minLength: 1, pattern: re `^[A-Za-z0-9-_.+=]+$`}
public type instrument_id string;

# Describes the URL.
public type url string;

# The tokenized payment source to fund a payment.
public type token record {
    # The PayPal-generated ID for the token.
    @constraint:String {maxLength: 255, minLength: 1, pattern: re `^[0-9a-zA-Z_-]+$`}
    string id;
    # The tokenization method that generated the ID.
    "BILLING_AGREEMENT" 'type;
};

# Bank Identification Number (BIN) details used to fund a payment.
public type bin_details record {
    # The Bank Identification Number (BIN) signifies the number that is being used to identify the granular level details (except the PII information) of the card.
    @constraint:String {maxLength: 25, minLength: 1, pattern: re `^[0-9]+$`}
    string bin?;
    # The issuer of the card instrument.
    @constraint:String {maxLength: 64, minLength: 1}
    string issuing_bank?;
    # The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
    country_code bin_country_code?;
    # The type of card product assigned to the BIN by the issuer. These values are defined by the issuer and may change over time. Some examples include: PREPAID_GIFT, CONSUMER, CORPORATE.
    @constraint:Array {maxLength: 256, minLength: 1}
    bin_detailsProductsItemsString[] products?;
};

public type altpay_recurring_attributes_request anydata;

public type account_id\-2 string;

# The details for the merchant who receives the funds and fulfills the order. The merchant is also known as the payee.
public type payee_base record {
    # The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>
    email email_address?;
    # The account identifier for a PayPal account.
    account_id merchant_id?;
};

# Resource consolidating common request and response attributes for vaulting PayPal Wallet.
public type vault_paypal_wallet_base record {
    *vault_instruction_base;
    *VaultPaypalWalletBaseAllOf2;
    "MERCHANT"|"PLATFORM" usage_type;
};

# The unique ID for a customer generated by PayPal.
@constraint:String {maxLength: 22, minLength: 1, pattern: re `^[0-9a-zA-Z_-]+$`}
public type merchant_partner_customer_id string;

# Information needed to pay using Trustly.
public type trustly_request record {
    # The full name representation like Mr J Smith.
    full_name name;
    # The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
    country_code country_code;
    # Customizes the payer experience during the approval process for the payment.
    experience_context_base experience_context?;
};

# Additional attributes associated with the use of this card.
public type card_attributes_response record {
    # The details about a saved payment source.
    vault_response vault?;
};

# Any additional payment instructions to be consider during payment processing. This processing instruction is applicable for Capturing an order or Authorizing an Order.
public type payment_instruction record {
    # An array of various fees, commissions, tips, or donations. This field is only applicable to merchants that been enabled for PayPal Commerce Platform for Marketplaces and Platforms capability.
    @constraint:Array {maxLength: 1}
    platform_fee[] platform_fees?;
    # The funds that are held on behalf of the merchant.
    disbursement_mode disbursement_mode?;
    # This field is only enabled for selected merchants/partners to use and provides the ability to trigger a specific pricing rate/plan for a payment transaction. The list of eligible 'payee_pricing_tier_id' would be provided to you by your Account Manager. Specifying values other than the one provided to you by your account manager would result in an error.
    @constraint:String {maxLength: 20, minLength: 1, pattern: re `^.*$`}
    string payee_pricing_tier_id?;
    # FX identifier generated returned by PayPal to be used for payment processing in order to honor FX rate (for eligible integrations) to be used when amount is settled/received into the payee account.
    @constraint:String {maxLength: 4000, minLength: 1, pattern: re `^.*$`}
    string payee_receivable_fx_rate_id?;
};

# The request-related [HATEOAS link](/api/rest/responses/#hateoas-links) information.
public type link_description record {
    # The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call.
    string href;
    # The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml).
    string rel;
    # The HTTP method required to make the related call.
    "GET"|"POST"|"PUT"|"DELETE"|"HEAD"|"CONNECT"|"OPTIONS"|"PATCH" method?;
};

# Information needed to pay using Sofort.
public type sofort_request record {
    # The full name representation like Mr J Smith.
    full_name name;
    # The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
    country_code country_code;
    # Customizes the payer experience during the approval process for the payment.
    experience_context_base experience_context?;
};

# The net amount. Returned when the currency of the refund is different from the currency of the PayPal account where the merchant holds their funds.
public type net_amount_breakdown_item record {
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money payable_amount?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money converted_amount?;
    # The exchange rate that determines the amount to convert from one currency to another currency.
    exchange_rate exchange_rate?;
};

# The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.<blockquote><strong>Note:</strong> The regular expression provides guidance but does not reject all invalid dates.</blockquote>
@constraint:String {maxLength: 64, minLength: 20, pattern: re `^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$`}
public type date_time string;

# The instruction to process an order.
public type processing_instruction "ORDER_COMPLETE_ON_PAYMENT_APPROVAL"|"NO_INSTRUCTION";

# Represents the Queries record for the operation: orders.get
public type OrdersGetQueries record {
    # A comma-separated list of fields that should be returned for the order. Valid filter field is `payment_source`.
    @constraint:String {pattern: re `^[a-z_]*$`}
    string fields?;
};

# The non-portable additional address details include fine-grain address information for Compliance, Risk, and other scenarios. This isn't portable with common third-party and open source applications. This can include data that is redundant with core fields. For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.
public type AddressDetails1 record {
    # The street number.
    @constraint:String {maxLength: 100}
    string street_number?;
    # The street name. Just `Drury` in `Drury Lane`.
    @constraint:String {maxLength: 100}
    string street_name?;
    # The street type. For example, avenue, boulevard, road, or expressway.
    @constraint:String {maxLength: 100}
    string street_type?;
    # The delivery service. Post office box, bag number, or post office name.
    @constraint:String {maxLength: 100}
    string delivery_service?;
    # A named locations that represents the premise. Usually a building name or number or collection of buildings with a common name or number. For example, <code>Craven House</code>.
    @constraint:String {maxLength: 100}
    string building_name?;
    # The first-order entity below a named building or location that represents the sub-premise. Usually a single building within a collection of buildings with a common name. Can be a flat, story, floor, room, or apartment.
    @constraint:String {maxLength: 100}
    string sub_building?;
};

# Additional attributes associated with the use of this PayPal Wallet.
public type paypal_wallet_attributes record {
    # The details about a customer in PayPal's system of record.
    paypal_wallet_customer customer?;
    # Resource consolidating common request and response attributes for vaulting PayPal Wallet.
    vault_paypal_wallet_base vault?;
};

# The customer and merchant payment preferences.
public type payment_method record {
    # The merchant-preferred payment methods.
    payee_payment_method_preference payee_preferred?;
    # NACHA (the regulatory body governing the ACH network) requires that API callers (merchants, partners) obtain the consumer’s explicit authorization before initiating a transaction. To stay compliant, you’ll need to make sure that you retain a compliant authorization for each transaction that you originate to the ACH Network using this API. ACH transactions are categorized (using SEC codes) by how you capture authorization from the Receiver (the person whose bank account is being debited or credited). PayPal supports the following SEC codes.
    "TEL"|"WEB"|"CCD"|"PPD" standard_entry_class_code = "WEB";
};

# The funds that are held on behalf of the merchant.
public type disbursement_mode "INSTANT"|"DELAYED";

# The level of protection offered as defined by [PayPal Seller Protection for Merchants](https://www.paypal.com/us/webapps/mpp/security/seller-protection).
public type seller_protection record {
    # Indicates whether the transaction is eligible for seller protection. For information, see [PayPal Seller Protection for Merchants](https://www.paypal.com/us/webapps/mpp/security/seller-protection).
    "ELIGIBLE"|"PARTIALLY_ELIGIBLE"|"NOT_ELIGIBLE" status?;
    # An array of conditions that are covered for the transaction.
    ("ITEM_NOT_RECEIVED"|"UNAUTHORIZED_TRANSACTION")[] dispute_categories?;
};

# Information used to pay using iDEAL.
public type ideal record {
    # The full name representation like Mr J Smith.
    full_name name?;
    # The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
    country_code country_code?;
    # The business identification code (BIC). In payments systems, a BIC is used to identify a specific business, most commonly a bank.
    bic bic?;
    # The last characters of the IBAN used to pay.
    iban_last_chars iban_last_chars?;
    altpay_recurring_attributes attributes?;
};

# A captured payment.
public type capture record {
    *capture_status;
    *CaptureAllOf2;
    *activity_timestamps;
};

# Information used to pay using Sofort.
public type sofort record {
    # The full name representation like Mr J Smith.
    full_name name?;
    # The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
    country_code country_code?;
    # The business identification code (BIC). In payments systems, a BIC is used to identify a specific business, most commonly a bank.
    bic bic?;
    # The last characters of the IBAN used to pay.
    iban_last_chars iban_last_chars?;
};

# The details of the captured payment status.
public type capture_status_details record {
    # The reason why the captured payment status is `PENDING` or `DENIED`.
    "BUYER_COMPLAINT"|"CHARGEBACK"|"ECHECK"|"INTERNATIONAL_WITHDRAWAL"|"OTHER"|"PENDING_REVIEW"|"RECEIVING_PREFERENCE_MANDATES_MANUAL_ACTION"|"REFUNDED"|"TRANSACTION_APPROVED_AWAITING_FUNDING"|"UNILATERAL"|"VERIFICATION_REQUIRED" reason?;
};

# The options that the payee or merchant offers to the payer to ship or pick up their items.
public type shipping_option record {
    # A unique ID that identifies a payer-selected shipping option.
    @constraint:String {maxLength: 127}
    string id;
    # A description that the payer sees, which helps them choose an appropriate shipping option. For example, `Free Shipping`, `USPS Priority Shipping`, `Expédition prioritaire USPS`, or `USPS yōuxiān fā huò`. Localize this description to the payer's locale.
    @constraint:String {maxLength: 127}
    string label;
    # A classification for the method of purchase fulfillment.
    shipping_type 'type?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money amount?;
    # If the API request sets `selected = true`, it represents the shipping option that the payee or merchant expects to be pre-selected for the payer when they first view the `shipping.options` in the PayPal Checkout experience. As part of the response if a `shipping.option` contains `selected=true`, it represents the shipping option that the payer selected during the course of checkout with PayPal. Only one `shipping.option` can be set to `selected=true`.
    boolean selected;
};

# Representation of card details as received in the request.
public type card_from_request record {
    # The year and month, in ISO-8601 `YYYY-MM` date format. See [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
    date_year_month expiry?;
    # The last digits of the payment card.
    @constraint:String {maxLength: 4, minLength: 2, pattern: re `[0-9]{2,}`}
    string last_digits?;
};

# Additional attributes associated with the use of a PayPal Wallet.
public type paypal_wallet_attributes_response record {
    # The details about a saved PayPal Wallet payment source.
    paypal_wallet_vault_response vault?;
    # An array of merchant cobranded cards used by buyer to complete an order. This array will be present if a merchant has onboarded their cobranded card with PayPal and provided corresponding label(s).
    @constraint:Array {maxLength: 25}
    cobranded_card[] cobranded_cards?;
};

# The level 2 card processing data collections. If your merchant account has been configured for Level 2 processing this field will be passed to the processor on your behalf. Please contact your PayPal Technical Account Manager to define level 2 data for your business.
public type level_2_card_processing_data record {
    # Use this field to pass a purchase identification value of up to 12 ASCII characters for AIB and 17 ASCII characters for all other processors.
    @constraint:String {maxLength: 17, minLength: 1}
    string invoice_id?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money tax_total?;
};

# Completes an capture payment for an order.
public type order_capture_request record {
    # The payment source definition.
    payment_source payment_source?;
};

# The tax ID of the customer. The customer is also known as the payer. Both `tax_id` and `tax_id_type` are required.
public type tax_info record {
    # The customer's tax ID value.
    @constraint:String {maxLength: 14, minLength: 1, pattern: re `([a-zA-Z0-9])`}
    string tax_id;
    # The customer's tax ID type.
    "BR_CPF"|"BR_CNPJ" tax_id_type;
};

# Represents the Headers record for the operation: orders.confirm
public type OrdersConfirmHeaders record {
    string PayPal\-Client\-Metadata\-Id?;
    # The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul>
    @constraint:String {maxLength: 25, minLength: 1, pattern: re `^[a-zA-Z=]*$`}
    string Prefer = "return=representation";
};

# Results of Authentication such as 3D Secure.
public type authentication_response record {
    # Liability shift indicator. The outcome of the issuer's authentication.
    liability_shift liability_shift?;
    # Results of 3D Secure Authentication.
    three_d_secure_authentication_response three_d_secure?;
    authentication_flow authentication_flow?;
    exemption_details exemption_details?;
};

# Merchants and partners can add Level 2 and 3 data to payments to reduce risk and payment processing costs. For more information about processing payments, see <a href="https://developer.paypal.com/docs/checkout/advanced/processing/">checkout</a> or <a href="https://developer.paypal.com/docs/multiparty/checkout/advanced/processing/">multiparty checkout</a>.
public type card_supplementary_data record {
    # The level 2 card processing data collections. If your merchant account has been configured for Level 2 processing this field will be passed to the processor on your behalf. Please contact your PayPal Technical Account Manager to define level 2 data for your business.
    level_2_card_processing_data level_2?;
    # The level 3 card processing data collections, If your merchant account has been configured for Level 3 processing this field will be passed to the processor on your behalf. Please contact your PayPal Technical Account Manager to define level 3 data for your business.
    level_3_card_processing_data level_3?;
};

public type CaptureAllOf2 record {
    # The PayPal-generated ID for the captured payment.
    string id?;
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money amount?;
    # The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives.
    string invoice_id?;
    # The API caller-provided external ID. Used to reconcile API caller-initiated transactions with PayPal transactions. Appears in transaction and settlement reports.
    @constraint:String {maxLength: 127}
    string custom_id?;
    # Reference values used by the card network to identify a transaction.
    network_transaction_reference network_transaction_reference?;
    # The level of protection offered as defined by [PayPal Seller Protection for Merchants](https://www.paypal.com/us/webapps/mpp/security/seller-protection).
    seller_protection seller_protection?;
    # Indicates whether you can make additional captures against the authorized payment. Set to `true` if you do not intend to capture additional payments against the authorization. Set to `false` if you intend to capture additional payments against the authorization.
    boolean final_capture = false;
    # The detailed breakdown of the capture activity. This is not available for transactions that are in pending state.
    seller_receivable_breakdown seller_receivable_breakdown?;
    # The funds that are held on behalf of the merchant.
    disbursement_mode disbursement_mode?;
    # An array of related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
    link_description[] links?;
    # The processor response information for payment requests, such as direct credit card transactions.
    processor_response processor_response?;
};

# The details about a customer in PayPal's system of record.
public type paypal_wallet_customer record {
    *customer;
    *PaypalWalletCustomerAllOf2;
};

# Customizes the payer experience during the approval process for payment with PayPal.<blockquote><strong>Note:</strong> Partners and Marketplaces might configure <code>brand_name</code> and <code>shipping_preference</code> during partner account setup, which overrides the request values.</blockquote>
public type paypal_wallet_experience_context record {
    # The label that overrides the business name in the PayPal account on the PayPal site. The pattern is defined by an external party and supports Unicode.
    @constraint:String {maxLength: 127, minLength: 1, pattern: re `^.*$`}
    string brand_name?;
    # The [language tag](https://tools.ietf.org/html/bcp47#section-2) for the language in which to localize the error-related strings, such as messages, issues, and suggested actions. The tag is made up of the [ISO 639-2 language code](https://www.loc.gov/standards/iso639-2/php/code_list.php), the optional [ISO-15924 script tag](https://www.unicode.org/iso15924/codelists.html), and the [ISO-3166 alpha-2 country code](/api/rest/reference/country-codes/) or [M49 region code](https://unstats.un.org/unsd/methodology/m49/).
    language locale?;
    # The location from which the shipping address is derived.
    "GET_FROM_FILE"|"NO_SHIPPING"|"SET_PROVIDED_ADDRESS" shipping_preference = "GET_FROM_FILE";
    # Describes the URL.
    url return_url?;
    # Describes the URL.
    url cancel_url?;
    # The type of landing page to show on the PayPal site for customer checkout.
    "LOGIN"|"GUEST_CHECKOUT"|"NO_PREFERENCE" landing_page = "NO_PREFERENCE";
    # Configures a <strong>Continue</strong> or <strong>Pay Now</strong> checkout flow.
    "CONTINUE"|"PAY_NOW" user_action = "CONTINUE";
    # The merchant-preferred payment methods.
    "UNRESTRICTED"|"IMMEDIATE_PAYMENT_REQUIRED" payment_method_preference = "UNRESTRICTED";
};

public type OrderAllOf2 record {
    # The ID of the order.
    string id?;
    # The payment source used to fund the payment.
    payment_source_response payment_source?;
    # The intent to either capture payment immediately or authorize a payment for an order after order creation.
    checkout_payment_intent intent?;
    # The instruction to process an order.
    processing_instruction processing_instruction?;
    # The customer who approves and pays for the order. The customer is also known as the payer.
    payer payer?;
    # An array of purchase units. Each purchase unit establishes a contract between a customer and merchant. Each purchase unit represents either a full or partial order that the customer intends to purchase from the merchant.
    @constraint:Array {maxLength: 10, minLength: 1}
    purchase_unit[] purchase_units?;
    # The order status.
    order_status status?;
    # An array of request-related HATEOAS links. To complete payer approval, use the `approve` link to redirect the payer. The API caller has 3 hours (default setting, this which can be changed by your account manager to 24/48/72 hours to accommodate your use case) from the time the order is created, to redirect your payer. Once redirected, the API caller has 3 hours for the payer to approve the order and either authorize or capture the order. If you are not using the PayPal JavaScript SDK to initiate PayPal Checkout (in context) ensure that you include `application_context.return_url` is specified or you will get "We're sorry, Things don't appear to be working at the moment" after the payer approves the payment.
    link_description[] links?;
};

public type OrderAuthorizeResponseAllOf2 record {
    # The ID of the order.
    string id?;
    # The payment source used to fund the payment.
    payment_source_response payment_source?;
    # The intent to either capture payment immediately or authorize a payment for an order after order creation.
    checkout_payment_intent intent?;
    # The instruction to process an order.
    processing_instruction processing_instruction?;
    # The customer who approves and pays for the order. The customer is also known as the payer.
    payer payer?;
    # An array of purchase units. Each purchase unit establishes a contract between a customer and merchant. Each purchase unit represents either a full or partial order that the customer intends to purchase from the merchant.
    @constraint:Array {maxLength: 10, minLength: 1}
    purchase_unit[] purchase_units?;
    # The order status.
    order_status status?;
    # An array of request-related HATEOAS links. To complete payer approval, use the `approve` link to redirect the payer. The API caller has 3 hours (default setting, this which can be changed by your account manager to 24/48/72 hours to accommodate your use case) from the time the order is created, to redirect your payer. Once redirected, the API caller has 3 hours for the payer to approve the order and either authorize or capture the order. If you are not using the PayPal JavaScript SDK to initiate PayPal Checkout (in context) ensure that you include `application_context.return_url` is specified or you will get "We're sorry, Things don't appear to be working at the moment" after the payer approves the payment.
    link_description[] links?;
};

# The payment card to use to fund a payment. Can be a credit or debit card.<blockquote><strong>Note:</strong> Passing card number, cvv and expiry directly via the API requires <a href="https://www.pcisecuritystandards.org/pci_security/completing_self_assessment"> PCI SAQ D compliance</a>. <br>*PayPal offers a mechanism by which you do not have to take on the <strong>PCI SAQ D</strong> burden by using hosted fields - refer to <a href="https://developer.paypal.com/docs/checkout/advanced/integrate/">this Integration Guide</a>*.</blockquote>
public type card_request record {
    *card;
    *CardRequestAllOf2;
};

# Payer confirms the intent to pay for the Order using the provided payment source.
public type confirm_order_request record {
    # The payment source definition.
    payment_source payment_source;
    # The instruction to process an order.
    processing_instruction processing_instruction?;
    # Customizes the payer confirmation experience.
    order_confirm_application_context application_context?;
};

public type vault_owner_id anydata;

# The status of the item shipment. For allowed values, see <a href="/docs/tracking/reference/shipping-status/">Shipping Statuses</a>.
public type shipment_tracking_status "CANCELLED"|"DELIVERED"|"LOCAL_PICKUP"|"ON_HOLD"|"SHIPPED"|"SHIPMENT_CREATED"|"DROPPED_OFF"|"IN_TRANSIT"|"RETURNED"|"LABEL_PRINTED"|"ERROR"|"UNCONFIRMED"|"PICKUP_FAILED"|"DELIVERY_DELAYED"|"DELIVERY_SCHEDULED"|"DELIVERY_FAILED"|"INRETURN"|"IN_PROCESS"|"NEW"|"VOID"|"PROCESSED"|"NOT_SHIPPED"|"COMPLETED";

# Indicates the type of the stored payment_source payment.
public type stored_payment_source_payment_type "ONE_TIME"|"RECURRING"|"UNSCHEDULED";

# Information about the Payment data obtained by decrypting Apple Pay token.
public type apple_pay_decrypted_token_data record {
    # The currency and amount for a financial transaction, such as a balance or payment due.
    money\-2 transaction_amount?;
    # The payment card to use to fund a payment. Can be a credit or debit card.
    card tokenized_card;
    # Apple Pay Hex-encoded device manufacturer identifier. The pattern is defined by an external party and supports Unicode.
    @constraint:String {maxLength: 2000, minLength: 1, pattern: re `^.*$`}
    string device_manufacturer_id?;
    # Indicates the type of payment data passed, in case of Non China the payment data is 3DSECURE and for China it is EMV.
    "3DSECURE"|"EMV" payment_data_type?;
    # Information about the decrypted apple pay payment data for the token like cryptogram, eci indicator.
    apple_pay_payment_data payment_data?;
};

# The card network or brand. Applies to credit, debit, gift, and payment cards.
public type card_brand "VISA"|"MASTERCARD"|"DISCOVER"|"AMEX"|"SOLO"|"JCB"|"STAR"|"DELTA"|"SWITCH"|"MAESTRO"|"CB_NATIONALE"|"CONFIGOGA"|"CONFIDIS"|"ELECTRON"|"CETELEM"|"CHINA_UNION_PAY";

# The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).
public type address_portable record {
    # The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.
    @constraint:String {maxLength: 300}
    string address_line_1?;
    # The second line of the address. For example, suite or apartment number.
    @constraint:String {maxLength: 300}
    string address_line_2?;
    # The third line of the address, if needed. For example, a street complement for Brazil, direction text, such as `next to Walmart`, or a landmark in an Indian address.
    @constraint:String {maxLength: 100}
    string address_line_3?;
    # The neighborhood, ward, or district. Smaller than `admin_area_level_3` or `sub_locality`. Value is:<ul><li>The postal sorting code for Guernsey and many French territories, such as French Guiana.</li><li>The fine-grained administrative levels in China.</li></ul>
    @constraint:String {maxLength: 100}
    string admin_area_4?;
    # A sub-locality, suburb, neighborhood, or district. Smaller than `admin_area_level_2`. Value is:<ul><li>Brazil. Suburb, bairro, or neighborhood.</li><li>India. Sub-locality or district. Street name information is not always available but a sub-locality or district can be a very small area.</li></ul>
    @constraint:String {maxLength: 100}
    string admin_area_3?;
    # A city, town, or village. Smaller than `admin_area_level_1`.
    @constraint:String {maxLength: 120}
    string admin_area_2?;
    # The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:<ul><li>UK. A county.</li><li>US. A state.</li><li>Canada. A province.</li><li>Japan. A prefecture.</li><li>Switzerland. A kanton.</li></ul>
    @constraint:String {maxLength: 300}
    string admin_area_1?;
    # The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).
    @constraint:String {maxLength: 60}
    string postal_code?;
    # The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
    country_code country_code;
    # The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.<br/>For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.
    AddressDetails address_details?;
};

# The year and month, in ISO-8601 `YYYY-MM` date format. See [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
@constraint:String {maxLength: 7, minLength: 7, pattern: re `^[0-9]{4}-(0[1-9]|1[0-2])$`}
public type date_year_month string;

# Information needed to pay using giropay.
public type giropay record {
    # The full name representation like Mr J Smith.
    full_name name?;
    # The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
    country_code country_code?;
    # The business identification code (BIC). In payments systems, a BIC is used to identify a specific business, most commonly a bank.
    bic bic?;
};

# Reference values used by the card network to identify a transaction.
public type network_transaction_reference record {
    # Transaction reference id returned by the scheme. For Visa and Amex, this is the "Tran id" field in response. For MasterCard, this is the "BankNet reference id" field in response. For Discover, this is the "NRID" field in response. The pattern we expect for this field from Visa/Amex/CB/Discover is numeric, Mastercard/BNPP is alphanumeric and Paysecure is alphanumeric with special character -.
    @constraint:String {maxLength: 36, minLength: 9, pattern: re `^[a-zA-Z0-9-_@.:&+=*^'~#!$%()]+$`}
    string id;
    # The date that the transaction was authorized by the scheme. This field may not be returned for all networks. MasterCard refers to this field as "BankNet reference date.
    @constraint:String {maxLength: 4, minLength: 4, pattern: re `^[0-9]+$`}
    string date?;
    # The card network or brand. Applies to credit, debit, gift, and payment cards.
    card_brand network?;
    # Reference ID issued for the card transaction. This ID can be used to track the transaction across processors, card brands and issuing banks.
    @constraint:String {maxLength: 36, minLength: 1, pattern: re `^[a-zA-Z0-9]+$`}
    string acquirer_reference_number?;
};

# Customizes the payer experience during the 3DS Approval for payment.
public type card_experience_context record {
    # Describes the URL.
    url return_url?;
    # Describes the URL.
    url cancel_url?;
};

# Provides additional details to process a payment using a `card` that has been stored or is intended to be stored (also referred to as stored_credential or card-on-file).<br/>Parameter compatibility:<br/><ul><li>`payment_type=ONE_TIME` is compatible only with `payment_initiator=CUSTOMER`.</li><li>`usage=FIRST` is compatible only with `payment_initiator=CUSTOMER`.</li><li>`previous_transaction_reference` or `previous_network_transaction_reference` is compatible only with `payment_initiator=MERCHANT`.</li><li>Only one of the parameters - `previous_transaction_reference` and `previous_network_transaction_reference` - can be present in the request.</li></ul>
public type card_stored_credential record {
    # The person or party who initiated or triggered the payment.
    payment_initiator payment_initiator;
    # Indicates the type of the stored payment_source payment.
    stored_payment_source_payment_type payment_type;
    # Indicates if this is a `first` or `subsequent` payment using a stored payment source (also referred to as stored credential or card on file).
    stored_payment_source_usage_type usage?;
    # Reference values used by the card network to identify a transaction.
    network_transaction_reference previous_network_transaction_reference?;
};

public type universal_product_code anydata;

# The processor response information for payment requests, such as direct credit card transactions.
public type processor_response record {
    # The address verification code for Visa, Discover, Mastercard, or American Express transactions.
    "A"|"B"|"C"|"D"|"E"|"F"|"G"|"I"|"M"|"N"|"P"|"R"|"S"|"U"|"W"|"X"|"Y"|"Z"|"Null"|"0"|"1"|"2"|"3"|"4" avs_code?;
    # The card verification value code for for Visa, Discover, Mastercard, or American Express.
    "E"|"I"|"M"|"N"|"P"|"S"|"U"|"X"|"All others"|"0"|"1"|"2"|"3"|"4" cvv_code?;
    # Processor response code for the non-PayPal payment processor errors.
    "0000"|"00N7"|"0100"|"0390"|"0500"|"0580"|"0800"|"0880"|"0890"|"0960"|"0R00"|"1000"|"10BR"|"1300"|"1310"|"1312"|"1317"|"1320"|"1330"|"1335"|"1340"|"1350"|"1352"|"1360"|"1370"|"1380"|"1382"|"1384"|"1390"|"1393"|"5100"|"5110"|"5120"|"5130"|"5135"|"5140"|"5150"|"5160"|"5170"|"5180"|"5190"|"5200"|"5210"|"5400"|"5500"|"5650"|"5700"|"5710"|"5800"|"5900"|"5910"|"5920"|"5930"|"5950"|"6300"|"7600"|"7700"|"7710"|"7800"|"7900"|"8000"|"8010"|"8020"|"8030"|"8100"|"8110"|"8220"|"9100"|"9500"|"9510"|"9520"|"9530"|"9540"|"9600"|"PCNR"|"PCVV"|"PP06"|"PPRN"|"PPAD"|"PPAB"|"PPAE"|"PPAG"|"PPAI"|"PPAR"|"PPAU"|"PPAV"|"PPAX"|"PPBG"|"PPC2"|"PPCE"|"PPCO"|"PPCR"|"PPCT"|"PPCU"|"PPD3"|"PPDC"|"PPDI"|"PPDV"|"PPDT"|"PPEF"|"PPEL"|"PPER"|"PPEX"|"PPFE"|"PPFI"|"PPFR"|"PPFV"|"PPGR"|"PPH1"|"PPIF"|"PPII"|"PPIM"|"PPIT"|"PPLR"|"PPLS"|"PPMB"|"PPMC"|"PPMD"|"PPNC"|"PPNL"|"PPNM"|"PPNT"|"PPPH"|"PPPI"|"PPPM"|"PPQC"|"PPRE"|"PPRF"|"PPRR"|"PPS0"|"PPS1"|"PPS2"|"PPS3"|"PPS4"|"PPS5"|"PPS6"|"PPSC"|"PPSD"|"PPSE"|"PPTE"|"PPTF"|"PPTI"|"PPTR"|"PPTT"|"PPTV"|"PPUA"|"PPUC"|"PPUE"|"PPUI"|"PPUP"|"PPUR"|"PPVC"|"PPVE"|"PPVT" response_code?;
    # The declined payment transactions might have payment advice codes. The card networks, like Visa and Mastercard, return payment advice codes.
    "01"|"02"|"03"|"21" payment_advice_code?;
};

# The person or party who initiated or triggered the payment.
public type payment_initiator "CUSTOMER"|"MERCHANT";

# The details about a customer in PayPal's system of record.
public type customer record {
    # The unique ID for a customer generated by PayPal.
    merchant_partner_customer_id id?;
    # The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>
    email email_address?;
    # The phone information.
    phone_with_type phone?;
};
